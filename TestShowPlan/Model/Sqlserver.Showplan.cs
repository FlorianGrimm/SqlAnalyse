//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.444.0.
namespace Sqlserver.Showplan
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para>The statement block that contains many statements</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("The statement block that contains many statements")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtBlockType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtBlockType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StmtSimpleType> _stmtSimple;
        
        [System.Xml.Serialization.XmlElementAttribute("StmtSimple")]
        public System.Collections.ObjectModel.Collection<StmtSimpleType> StmtSimple
        {
            get
            {
                return this._stmtSimple;
            }
            private set
            {
                this._stmtSimple = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StmtSimple-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the StmtSimple collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StmtSimpleSpecified
        {
            get
            {
                return (this.StmtSimple.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="StmtBlockType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StmtBlockType" /> class.</para>
        /// </summary>
        public StmtBlockType()
        {
            this._stmtSimple = new System.Collections.ObjectModel.Collection<StmtSimpleType>();
            this._stmtCond = new System.Collections.ObjectModel.Collection<StmtCondType>();
            this._stmtCursor = new System.Collections.ObjectModel.Collection<StmtCursorType>();
            this._stmtReceive = new System.Collections.ObjectModel.Collection<StmtReceiveType>();
            this._stmtUseDb = new System.Collections.ObjectModel.Collection<StmtUseDbType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StmtCondType> _stmtCond;
        
        [System.Xml.Serialization.XmlElementAttribute("StmtCond")]
        public System.Collections.ObjectModel.Collection<StmtCondType> StmtCond
        {
            get
            {
                return this._stmtCond;
            }
            private set
            {
                this._stmtCond = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StmtCond-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the StmtCond collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StmtCondSpecified
        {
            get
            {
                return (this.StmtCond.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StmtCursorType> _stmtCursor;
        
        [System.Xml.Serialization.XmlElementAttribute("StmtCursor")]
        public System.Collections.ObjectModel.Collection<StmtCursorType> StmtCursor
        {
            get
            {
                return this._stmtCursor;
            }
            private set
            {
                this._stmtCursor = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StmtCursor-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the StmtCursor collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StmtCursorSpecified
        {
            get
            {
                return (this.StmtCursor.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StmtReceiveType> _stmtReceive;
        
        [System.Xml.Serialization.XmlElementAttribute("StmtReceive")]
        public System.Collections.ObjectModel.Collection<StmtReceiveType> StmtReceive
        {
            get
            {
                return this._stmtReceive;
            }
            private set
            {
                this._stmtReceive = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StmtReceive-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the StmtReceive collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StmtReceiveSpecified
        {
            get
            {
                return (this.StmtReceive.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StmtUseDbType> _stmtUseDb;
        
        [System.Xml.Serialization.XmlElementAttribute("StmtUseDb")]
        public System.Collections.ObjectModel.Collection<StmtUseDbType> StmtUseDb
        {
            get
            {
                return this._stmtUseDb;
            }
            private set
            {
                this._stmtUseDb = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StmtUseDb-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the StmtUseDb collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StmtUseDbSpecified
        {
            get
            {
                return (this.StmtUseDb.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para>The simple statement that may or may not contain query plan, UDF plan or Stored Procedure plan</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("The simple statement that may or may not contain query plan, UDF plan or Stored P" +
        "rocedure plan")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtSimpleType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtSimpleType : BaseStmtInfoType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("QueryPlan")]
        public QueryPlanType QueryPlan { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FunctionType> _uDF;
        
        [System.Xml.Serialization.XmlElementAttribute("UDF")]
        public System.Collections.ObjectModel.Collection<FunctionType> UDF
        {
            get
            {
                return this._uDF;
            }
            private set
            {
                this._uDF = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UDF-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UDF collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UDFSpecified
        {
            get
            {
                return (this.UDF.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="StmtSimpleType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StmtSimpleType" /> class.</para>
        /// </summary>
        public StmtSimpleType()
        {
            this._uDF = new System.Collections.ObjectModel.Collection<FunctionType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("StoredProc")]
        public FunctionType StoredProc { get; set; }
    }
    
    /// <summary>
    /// <para>the type that contains the basic statement information</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("the type that contains the basic statement information")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BaseStmtInfoType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtCondType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtCursorType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtReceiveType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtSimpleType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtUseDbType))]
    public partial class BaseStmtInfoType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("StatementSetOptions")]
        public SetOptionsType StatementSetOptions { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementCompId")]
        public int StatementCompId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatementCompId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementCompId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementCompIdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementEstRows")]
        public double StatementEstRows { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatementEstRows-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementEstRows property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementEstRowsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementId")]
        public int StatementId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatementId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementIdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementOptmLevel")]
        public string StatementOptmLevel { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementOptmEarlyAbortReason")]
        public BaseStmtInfoTypeStatementOptmEarlyAbortReason StatementOptmEarlyAbortReason { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatementOptmEarlyAbortReason-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementOptmEarlyAbortReason property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementOptmEarlyAbortReasonSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CardinalityEstimationModelVersion")]
        public string CardinalityEstimationModelVersion { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementSubTreeCost")]
        public double StatementSubTreeCost { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatementSubTreeCost-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementSubTreeCost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementSubTreeCostSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementText")]
        public string StatementText { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementType")]
        public string StatementType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("TemplatePlanGuideDB")]
        public string TemplatePlanGuideDB { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("TemplatePlanGuideName")]
        public string TemplatePlanGuideName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("PlanGuideDB")]
        public string PlanGuideDB { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("PlanGuideName")]
        public string PlanGuideName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ParameterizedText")]
        public string ParameterizedText { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ParameterizedPlanHandle")]
        public string ParameterizedPlanHandle { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("QueryHash")]
        public string QueryHash { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("QueryPlanHash")]
        public string QueryPlanHash { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("RetrievedFromCache")]
        public string RetrievedFromCache { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementSqlHandle")]
        public string StatementSqlHandle { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("DatabaseContextSettingsId")]
        public ulong DatabaseContextSettingsId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DatabaseContextSettingsId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DatabaseContextSettingsId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DatabaseContextSettingsIdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ParentObjectId")]
        public ulong ParentObjectId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParentObjectId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ParentObjectId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentObjectIdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("BatchSqlHandle")]
        public string BatchSqlHandle { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatementParameterizationType")]
        public int StatementParameterizationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatementParameterizationType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatementParameterizationType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementParameterizationTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("SecurityPolicyApplied")]
        public bool SecurityPolicyApplied { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SecurityPolicyApplied-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SecurityPolicyApplied property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SecurityPolicyAppliedSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>The set options that affects query cost</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("The set options that affects query cost")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SetOptionsType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOptionsType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("ANSI_NULLS")]
        public bool ANSI_NULLS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ANSI_NULLS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ANSI_NULLS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANSI_NULLSSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ANSI_PADDING")]
        public bool ANSI_PADDING { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ANSI_PADDING-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ANSI_PADDING property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANSI_PADDINGSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ANSI_WARNINGS")]
        public bool ANSI_WARNINGS { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ANSI_WARNINGS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ANSI_WARNINGS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANSI_WARNINGSSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ARITHABORT")]
        public bool ARITHABORT { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ARITHABORT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ARITHABORT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ARITHABORTSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CONCAT_NULL_YIELDS_NULL")]
        public bool CONCAT_NULL_YIELDS_NULL { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CONCAT_NULL_YIELDS_NULL-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CONCAT_NULL_YIELDS_NULL property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CONCAT_NULL_YIELDS_NULLSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("NUMERIC_ROUNDABORT")]
        public bool NUMERIC_ROUNDABORT { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NUMERIC_ROUNDABORT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NUMERIC_ROUNDABORT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NUMERIC_ROUNDABORTSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("QUOTED_IDENTIFIER")]
        public bool QUOTED_IDENTIFIER { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die QUOTED_IDENTIFIER-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the QUOTED_IDENTIFIER property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QUOTED_IDENTIFIERSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BaseStmtInfoTypeStatementOptmEarlyAbortReason", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum BaseStmtInfoTypeStatementOptmEarlyAbortReason
    {
        
        TimeOut,
        
        MemoryLimitExceeded,
        
        GoodEnoughPlanFound,
    }
    
    /// <summary>
    /// <para>New Runtime information:
    ///			DegreeOfParallelism
    ///			EffectiveDegreeOfParallelism: Max parallelism used by columnstore index build
    ///			MemoryGrant (in kilobytes)
    ///			
    ///			New compile time information:
    ///			mem fractions
    ///			CachedPlanSize (in kilobytes)
    ///			CompileTime (in milliseconds)
    ///			CompileCPU (in milliseconds)
    ///			CompileMemory (in kilobytes)
    ///			Parameter values used during query compilation
    ///			NonParallelPlanReason</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"New Runtime information: DegreeOfParallelism EffectiveDegreeOfParallelism: Max parallelism used by columnstore index build MemoryGrant (in kilobytes) New compile time information: mem fractions CachedPlanSize (in kilobytes) CompileTime (in milliseconds) CompileCPU (in milliseconds) CompileMemory (in kilobytes) Parameter values used during query compilation NonParallelPlanReason")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("QueryPlanType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPlanType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("InternalInfo")]
        public InternalInfoType InternalInfo { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ThreadStat")]
        public ThreadStatType ThreadStat { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MissingIndexGroupType> _missingIndexes;
        
        [System.Xml.Serialization.XmlArrayAttribute("MissingIndexes")]
        [System.Xml.Serialization.XmlArrayItemAttribute("MissingIndexGroup", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<MissingIndexGroupType> MissingIndexes
        {
            get
            {
                return this._missingIndexes;
            }
            private set
            {
                this._missingIndexes = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissingIndexes-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MissingIndexes collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MissingIndexesSpecified
        {
            get
            {
                return (this.MissingIndexes.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="QueryPlanType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="QueryPlanType" /> class.</para>
        /// </summary>
        public QueryPlanType()
        {
            this._missingIndexes = new System.Collections.ObjectModel.Collection<MissingIndexGroupType>();
            this._optimizerStatsUsage = new System.Collections.ObjectModel.Collection<StatsInfoType>();
            this._traceFlags = new System.Collections.ObjectModel.Collection<TraceFlagListType>();
            this._waitStats = new System.Collections.ObjectModel.Collection<WaitStatType>();
            this._parameterList = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("GuessedSelectivity")]
        public GuessedSelectivityType GuessedSelectivity { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("UnmatchedIndexes")]
        public UnmatchedIndexesType UnmatchedIndexes { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Warnings")]
        public WarningsType Warnings { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("MemoryGrantInfo")]
        public MemoryGrantType MemoryGrantInfo { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OptimizerHardwareDependentProperties")]
        public OptimizerHardwareDependentPropertiesType OptimizerHardwareDependentProperties { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StatsInfoType> _optimizerStatsUsage;
        
        [System.Xml.Serialization.XmlArrayAttribute("OptimizerStatsUsage")]
        [System.Xml.Serialization.XmlArrayItemAttribute("StatisticsInfo", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<StatsInfoType> OptimizerStatsUsage
        {
            get
            {
                return this._optimizerStatsUsage;
            }
            private set
            {
                this._optimizerStatsUsage = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OptimizerStatsUsage-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OptimizerStatsUsage collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OptimizerStatsUsageSpecified
        {
            get
            {
                return (this.OptimizerStatsUsage.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TraceFlagListType> _traceFlags;
        
        [System.Xml.Serialization.XmlElementAttribute("TraceFlags")]
        public System.Collections.ObjectModel.Collection<TraceFlagListType> TraceFlags
        {
            get
            {
                return this._traceFlags;
            }
            private set
            {
                this._traceFlags = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TraceFlags-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TraceFlags collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TraceFlagsSpecified
        {
            get
            {
                return (this.TraceFlags.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WaitStatType> _waitStats;
        
        [System.Xml.Serialization.XmlArrayAttribute("WaitStats")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Wait", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<WaitStatType> WaitStats
        {
            get
            {
                return this._waitStats;
            }
            private set
            {
                this._waitStats = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WaitStats-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the WaitStats collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaitStatsSpecified
        {
            get
            {
                return (this.WaitStats.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("QueryTimeStats")]
        public QueryExecTimeType QueryTimeStats { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _parameterList;
        
        [System.Xml.Serialization.XmlArrayAttribute("ParameterList")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> ParameterList
        {
            get
            {
                return this._parameterList;
            }
            private set
            {
                this._parameterList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParameterList-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ParameterList collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParameterListSpecified
        {
            get
            {
                return (this.ParameterList.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("DegreeOfParallelism")]
        public int DegreeOfParallelism { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DegreeOfParallelism-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DegreeOfParallelism property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreeOfParallelismSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("EffectiveDegreeOfParallelism")]
        public int EffectiveDegreeOfParallelism { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EffectiveDegreeOfParallelism-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EffectiveDegreeOfParallelism property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveDegreeOfParallelismSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("NonParallelPlanReason")]
        public string NonParallelPlanReason { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("MemoryGrant")]
        public ulong MemoryGrant { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemoryGrant-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MemoryGrant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryGrantSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CachedPlanSize")]
        public ulong CachedPlanSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CachedPlanSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CachedPlanSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CachedPlanSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CompileTime")]
        public ulong CompileTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CompileTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompileTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompileTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CompileCPU")]
        public ulong CompileCPU { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CompileCPU-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompileCPU property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompileCPUSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CompileMemory")]
        public ulong CompileMemory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CompileMemory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompileMemory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompileMemorySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("UsePlan")]
        public bool UsePlan { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsePlan-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsePlan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsePlanSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ContainsInterleavedExecutionCandidates")]
        public bool ContainsInterleavedExecutionCandidates { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContainsInterleavedExecutionCandidates-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContainsInterleavedExecutionCandidates property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContainsInterleavedExecutionCandidatesSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Arbitrary content type</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Arbitrary content type")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InternalInfoType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InternalInfoType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<System.Xml.XmlElement> _any;
        
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Collections.ObjectModel.Collection<System.Xml.XmlElement> Any
        {
            get
            {
                return this._any;
            }
            private set
            {
                this._any = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnySpecified
        {
            get
            {
                return (this.Any.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="InternalInfoType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InternalInfoType" /> class.</para>
        /// </summary>
        public InternalInfoType()
        {
            this._any = new System.Collections.ObjectModel.Collection<System.Xml.XmlElement>();
            this._anyAttribute = new System.Collections.ObjectModel.Collection<System.Xml.XmlAttribute>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<System.Xml.XmlAttribute> _anyAttribute;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Collections.ObjectModel.Collection<System.Xml.XmlAttribute> AnyAttribute
        {
            get
            {
                return this._anyAttribute;
            }
            private set
            {
                this._anyAttribute = value;
            }
        }
    }
    
    /// <summary>
    /// <para>Information on parallel thread usage.
    ///			Branches: Attribute. total number of concurrent branches of query plan.  
    ///				Query would need additional worker threads of at least (Branches)* (Degree of Parallelism)
    ///			UsedThreads: Attribute maximum number of used parallel threads.  This is available only for statistics XML
    ///			Then follows a list of one or more ThreadReservation elements.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"Information on parallel thread usage. Branches: Attribute. total number of concurrent branches of query plan. Query would need additional worker threads of at least (Branches)* (Degree of Parallelism) UsedThreads: Attribute maximum number of used parallel threads. This is available only for statistics XML Then follows a list of one or more ThreadReservation elements.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ThreadStatType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThreadStatType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ThreadReservationType> _threadReservation;
        
        [System.Xml.Serialization.XmlElementAttribute("ThreadReservation")]
        public System.Collections.ObjectModel.Collection<ThreadReservationType> ThreadReservation
        {
            get
            {
                return this._threadReservation;
            }
            private set
            {
                this._threadReservation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThreadReservation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ThreadReservation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ThreadReservationSpecified
        {
            get
            {
                return (this.ThreadReservation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ThreadStatType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ThreadStatType" /> class.</para>
        /// </summary>
        public ThreadStatType()
        {
            this._threadReservation = new System.Collections.ObjectModel.Collection<ThreadReservationType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Branches")]
        public int Branches { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("UsedThreads")]
        public int UsedThreads { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsedThreads-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsedThreads property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsedThreadsSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Information on how parallel threads are reserved on NUMA node
    ///			NodeId: ID of NUMA node where this query is chosen to run
    ///			ReservedThreads: number of reserved parallel thread on this NUMA node</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Information on how parallel threads are reserved on NUMA node NodeId: ID of NUMA " +
        "node where this query is chosen to run ReservedThreads: number of reserved paral" +
        "lel thread on this NUMA node")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ThreadReservationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ThreadReservationType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("NodeId")]
        public int NodeId { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ReservedThreads")]
        public int ReservedThreads { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MissingIndexesType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MissingIndexesType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MissingIndexGroupType> _missingIndexGroup;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MissingIndexGroup")]
        public System.Collections.ObjectModel.Collection<MissingIndexGroupType> MissingIndexGroup
        {
            get
            {
                return this._missingIndexGroup;
            }
            private set
            {
                this._missingIndexGroup = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MissingIndexesType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MissingIndexesType" /> class.</para>
        /// </summary>
        public MissingIndexesType()
        {
            this._missingIndexGroup = new System.Collections.ObjectModel.Collection<MissingIndexGroupType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MissingIndexGroupType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MissingIndexGroupType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MissingIndexType> _missingIndex;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MissingIndex")]
        public System.Collections.ObjectModel.Collection<MissingIndexType> MissingIndex
        {
            get
            {
                return this._missingIndex;
            }
            private set
            {
                this._missingIndex = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MissingIndexGroupType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MissingIndexGroupType" /> class.</para>
        /// </summary>
        public MissingIndexGroupType()
        {
            this._missingIndex = new System.Collections.ObjectModel.Collection<MissingIndexType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Impact")]
        public double Impact { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MissingIndexType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MissingIndexType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnGroupType> _columnGroup;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ColumnGroup")]
        public System.Collections.ObjectModel.Collection<ColumnGroupType> ColumnGroup
        {
            get
            {
                return this._columnGroup;
            }
            private set
            {
                this._columnGroup = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MissingIndexType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MissingIndexType" /> class.</para>
        /// </summary>
        public MissingIndexType()
        {
            this._columnGroup = new System.Collections.ObjectModel.Collection<ColumnGroupType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Database")]
        public string Database { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Schema")]
        public string Schema { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Table")]
        public string Table { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ColumnGroupType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ColumnGroupType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnType> _column;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Column")]
        public System.Collections.ObjectModel.Collection<ColumnType> Column
        {
            get
            {
                return this._column;
            }
            private set
            {
                this._column = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ColumnGroupType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ColumnGroupType" /> class.</para>
        /// </summary>
        public ColumnGroupType()
        {
            this._column = new System.Collections.ObjectModel.Collection<ColumnType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Usage")]
        public ColumnGroupTypeUsage Usage { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ColumnType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ColumnType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Name")]
        public string Name { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ColumnId")]
        public int ColumnId { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ColumnGroupTypeUsage", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum ColumnGroupTypeUsage
    {
        
        EQUALITY,
        
        INEQUALITY,
        
        INCLUDE,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GuessedSelectivityType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GuessedSelectivityType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Spatial")]
        public ObjectType Spatial { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ObjectType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObjectType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("Server")]
        public string Server { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Database")]
        public string Database { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Schema")]
        public string Schema { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Table")]
        public string Table { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Index")]
        public string Index { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Filtered")]
        public bool Filtered { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filtered-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Filtered property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FilteredSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Alias")]
        public string Alias { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("TableReferenceId")]
        public int TableReferenceId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TableReferenceId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TableReferenceId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TableReferenceIdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("IndexKind")]
        public IndexKindType IndexKind { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IndexKind-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndexKind property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexKindSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CloneAccessScope")]
        public CloneAccessScopeType CloneAccessScope { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CloneAccessScope-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CloneAccessScope property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CloneAccessScopeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Storage")]
        public StorageType Storage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Storage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Storage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StorageSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IndexKindType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum IndexKindType
    {
        
        Heap,
        
        Clustered,
        
        FTSChangeTracking,
        
        FTSMapping,
        
        NonClustered,
        
        PrimaryXML,
        
        SecondaryXML,
        
        Spatial,
        
        ViewClustered,
        
        ViewNonClustered,
        
        NonClusteredHash,
        
        SelectiveXML,
        
        SecondarySelectiveXML,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CloneAccessScopeType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CloneAccessScopeType
    {
        
        Primary,
        
        Secondary,
        
        Both,
        
        Either,
        
        ExactMatch,
        
        Local,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StorageType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum StorageType
    {
        
        RowStore,
        
        ColumnStore,
        
        MemoryOptimized,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UnmatchedIndexesType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnmatchedIndexesType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ObjectType> _parameterization;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("Parameterization")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Object", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ObjectType> Parameterization
        {
            get
            {
                return this._parameterization;
            }
            private set
            {
                this._parameterization = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UnmatchedIndexesType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UnmatchedIndexesType" /> class.</para>
        /// </summary>
        public UnmatchedIndexesType()
        {
            this._parameterization = new System.Collections.ObjectModel.Collection<ObjectType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParameterizationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParameterizationType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ObjectType> _object;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Object")]
        public System.Collections.ObjectModel.Collection<ObjectType> Object
        {
            get
            {
                return this._object;
            }
            private set
            {
                this._object = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ParameterizationType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParameterizationType" /> class.</para>
        /// </summary>
        public ParameterizationType()
        {
            this._object = new System.Collections.ObjectModel.Collection<ObjectType>();
        }
    }
    
    /// <summary>
    /// <para>List of all possible iterator or query specific warnings (e.g. hash spilling, no join predicate)</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("List of all possible iterator or query specific warnings (e.g. hash spilling, no " +
        "join predicate)")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WarningsType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WarningsType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceListType> _columnsWithNoStatistics;
        
        [System.Xml.Serialization.XmlElementAttribute("ColumnsWithNoStatistics")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceListType> ColumnsWithNoStatistics
        {
            get
            {
                return this._columnsWithNoStatistics;
            }
            private set
            {
                this._columnsWithNoStatistics = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ColumnsWithNoStatistics-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ColumnsWithNoStatistics collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnsWithNoStatisticsSpecified
        {
            get
            {
                return (this.ColumnsWithNoStatistics.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="WarningsType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="WarningsType" /> class.</para>
        /// </summary>
        public WarningsType()
        {
            this._columnsWithNoStatistics = new System.Collections.ObjectModel.Collection<ColumnReferenceListType>();
            this._spillToTempDb = new System.Collections.ObjectModel.Collection<SpillToTempDbType>();
            this._wait = new System.Collections.ObjectModel.Collection<WaitWarningType>();
            this._planAffectingConvert = new System.Collections.ObjectModel.Collection<AffectingConvertWarningType>();
            this._sortSpillDetails = new System.Collections.ObjectModel.Collection<SortSpillDetailsType>();
            this._hashSpillDetails = new System.Collections.ObjectModel.Collection<HashSpillDetailsType>();
            this._memoryGrantWarning = new System.Collections.ObjectModel.Collection<MemoryGrantWarningInfo>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SpillToTempDbType> _spillToTempDb;
        
        [System.Xml.Serialization.XmlElementAttribute("SpillToTempDb")]
        public System.Collections.ObjectModel.Collection<SpillToTempDbType> SpillToTempDb
        {
            get
            {
                return this._spillToTempDb;
            }
            private set
            {
                this._spillToTempDb = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SpillToTempDb-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SpillToTempDb collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpillToTempDbSpecified
        {
            get
            {
                return (this.SpillToTempDb.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WaitWarningType> _wait;
        
        [System.Xml.Serialization.XmlElementAttribute("Wait")]
        public System.Collections.ObjectModel.Collection<WaitWarningType> Wait
        {
            get
            {
                return this._wait;
            }
            private set
            {
                this._wait = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Wait-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Wait collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaitSpecified
        {
            get
            {
                return (this.Wait.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AffectingConvertWarningType> _planAffectingConvert;
        
        [System.Xml.Serialization.XmlElementAttribute("PlanAffectingConvert")]
        public System.Collections.ObjectModel.Collection<AffectingConvertWarningType> PlanAffectingConvert
        {
            get
            {
                return this._planAffectingConvert;
            }
            private set
            {
                this._planAffectingConvert = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlanAffectingConvert-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PlanAffectingConvert collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlanAffectingConvertSpecified
        {
            get
            {
                return (this.PlanAffectingConvert.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SortSpillDetailsType> _sortSpillDetails;
        
        [System.Xml.Serialization.XmlElementAttribute("SortSpillDetails")]
        public System.Collections.ObjectModel.Collection<SortSpillDetailsType> SortSpillDetails
        {
            get
            {
                return this._sortSpillDetails;
            }
            private set
            {
                this._sortSpillDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SortSpillDetails-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SortSpillDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SortSpillDetailsSpecified
        {
            get
            {
                return (this.SortSpillDetails.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<HashSpillDetailsType> _hashSpillDetails;
        
        [System.Xml.Serialization.XmlElementAttribute("HashSpillDetails")]
        public System.Collections.ObjectModel.Collection<HashSpillDetailsType> HashSpillDetails
        {
            get
            {
                return this._hashSpillDetails;
            }
            private set
            {
                this._hashSpillDetails = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HashSpillDetails-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the HashSpillDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HashSpillDetailsSpecified
        {
            get
            {
                return (this.HashSpillDetails.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MemoryGrantWarningInfo> _memoryGrantWarning;
        
        [System.Xml.Serialization.XmlElementAttribute("MemoryGrantWarning")]
        public System.Collections.ObjectModel.Collection<MemoryGrantWarningInfo> MemoryGrantWarning
        {
            get
            {
                return this._memoryGrantWarning;
            }
            private set
            {
                this._memoryGrantWarning = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemoryGrantWarning-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MemoryGrantWarning collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryGrantWarningSpecified
        {
            get
            {
                return (this.MemoryGrantWarning.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("NoJoinPredicate")]
        public bool NoJoinPredicate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NoJoinPredicate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NoJoinPredicate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoJoinPredicateSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("SpatialGuess")]
        public bool SpatialGuess { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SpatialGuess-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpatialGuess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpatialGuessSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("UnmatchedIndexes")]
        public bool UnmatchedIndexes { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UnmatchedIndexes-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UnmatchedIndexes property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnmatchedIndexesSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("FullUpdateForOnlineIndexBuild")]
        public bool FullUpdateForOnlineIndexBuild { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FullUpdateForOnlineIndexBuild-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FullUpdateForOnlineIndexBuild property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FullUpdateForOnlineIndexBuildSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ColumnReferenceListType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ColumnReferenceListType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _columnReference;
        
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> ColumnReference
        {
            get
            {
                return this._columnReference;
            }
            private set
            {
                this._columnReference = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ColumnReference-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ColumnReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColumnReferenceSpecified
        {
            get
            {
                return (this.ColumnReference.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ColumnReferenceListType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ColumnReferenceListType" /> class.</para>
        /// </summary>
        public ColumnReferenceListType()
        {
            this._columnReference = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ColumnReferenceType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ColumnReferenceType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType ScalarOperator { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("InternalInfo")]
        public InternalInfoType InternalInfo { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Server")]
        public string Server { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Database")]
        public string Database { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Schema")]
        public string Schema { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Table")]
        public string Table { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Alias")]
        public string Alias { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Column")]
        public string Column { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ComputedColumn")]
        public bool ComputedColumn { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ComputedColumn-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ComputedColumn property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ComputedColumnSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ParameterDataType")]
        public string ParameterDataType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ParameterCompiledValue")]
        public string ParameterCompiledValue { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ParameterRuntimeValue")]
        public string ParameterRuntimeValue { get; set; }
    }
    
    /// <summary>
    /// <para>Scalar expression. If root of scalar tree contains semantically equivalent string representation of entire expression</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Scalar expression. If root of scalar tree contains semantically equivalent string" +
        " representation of entire expression")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScalarType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScalarType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Aggregate")]
        public AggregateType Aggregate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Arithmetic")]
        public ArithmeticType Arithmetic { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Assign")]
        public AssignType Assign { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Compare")]
        public CompareType Compare { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Const")]
        public ConstType Const { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Convert")]
        public ConvertType Convert { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Identifier")]
        public IdentType Identifier { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("IF")]
        public ConditionalType IF { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Intrinsic")]
        public IntrinsicType Intrinsic { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Logical")]
        public LogicalType Logical { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AssignType> _multipleAssign;
        
        [System.Xml.Serialization.XmlArrayAttribute("MultipleAssign")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Assign", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<AssignType> MultipleAssign
        {
            get
            {
                return this._multipleAssign;
            }
            private set
            {
                this._multipleAssign = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MultipleAssign-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MultipleAssign collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultipleAssignSpecified
        {
            get
            {
                return (this.MultipleAssign.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ScalarType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ScalarType" /> class.</para>
        /// </summary>
        public ScalarType()
        {
            this._multipleAssign = new System.Collections.ObjectModel.Collection<AssignType>();
            this._scalarExpressionList = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarExpressionList;
        
        [System.Xml.Serialization.XmlArrayAttribute("ScalarExpressionList")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ScalarOperator", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarExpressionList
        {
            get
            {
                return this._scalarExpressionList;
            }
            private set
            {
                this._scalarExpressionList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScalarExpressionList-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ScalarExpressionList collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScalarExpressionListSpecified
        {
            get
            {
                return (this.ScalarExpressionList.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Sequence")]
        public ScalarSequenceType Sequence { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Subquery")]
        public SubqueryType Subquery { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("UDTMethod")]
        public UDTMethodType UDTMethod { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("UserDefinedAggregate")]
        public UDAggregateType UserDefinedAggregate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("UserDefinedFunction")]
        public UDFType UserDefinedFunction { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("InternalInfo")]
        public InternalInfoType InternalInfo { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ScalarString")]
        public string ScalarString { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AggregateType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AggregateType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScalarOperator-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ScalarOperator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScalarOperatorSpecified
        {
            get
            {
                return (this.ScalarOperator.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="AggregateType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AggregateType" /> class.</para>
        /// </summary>
        public AggregateType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("AggType")]
        public string AggType { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Distinct")]
        public bool Distinct { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ArithmeticType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArithmeticType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ArithmeticType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ArithmeticType" /> class.</para>
        /// </summary>
        public ArithmeticType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Operation")]
        public ArithmeticOperationType Operation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ArithmeticOperationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ArithmeticOperationType
    {
        
        ADD,
        
        BIT_ADD,
        
        BIT_AND,
        
        BIT_COMBINE,
        
        BIT_NOT,
        
        BIT_OR,
        
        BIT_XOR,
        
        DIV,
        
        HASH,
        
        MINUS,
        
        MOD,
        
        MULT,
        
        SUB,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AssignType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference")]
        public ColumnReferenceType ColumnReference { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType ScalarOperator { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CompareType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompareType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="CompareType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CompareType" /> class.</para>
        /// </summary>
        public CompareType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("CompareOp")]
        public CompareOpType CompareOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CompareOpType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CompareOpType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("BINARY IS")]
        BINARY_IS,
        
        [System.Xml.Serialization.XmlEnumAttribute("BOTH NULL")]
        BOTH_NULL,
        
        EQ,
        
        GE,
        
        GT,
        
        IS,
        
        [System.Xml.Serialization.XmlEnumAttribute("IS NOT")]
        IS_NOT,
        
        [System.Xml.Serialization.XmlEnumAttribute("IS NOT NULL")]
        IS_NOT_NULL,
        
        [System.Xml.Serialization.XmlEnumAttribute("IS NULL")]
        IS_NULL,
        
        LE,
        
        LT,
        
        NE,
        
        [System.Xml.Serialization.XmlEnumAttribute("ONE NULL")]
        ONE_NULL,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConstType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConstType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ConstValue")]
        public string ConstValue { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConvertType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Style")]
        public ScalarExpressionType Style { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Style")]
        public int Style_1 { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType ScalarOperator { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("DataType")]
        public string DataType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Length")]
        public int Length { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Length-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Length property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Precision")]
        public int Precision { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Precision-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Precision property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrecisionSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Scale")]
        public int Scale { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scale-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Implicit")]
        public bool Implicit { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScalarExpressionType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SetPredicateElementType))]
    public partial class ScalarExpressionType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType ScalarOperator { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IdentType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IdentType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference")]
        public ColumnReferenceType ColumnReference { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Table")]
        public string Table { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConditionalType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConditionalType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Condition")]
        public ScalarExpressionType Condition { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Then")]
        public ScalarExpressionType Then { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Else")]
        public ScalarExpressionType Else { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IntrinsicType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IntrinsicType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScalarOperator-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ScalarOperator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScalarOperatorSpecified
        {
            get
            {
                return (this.ScalarOperator.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="IntrinsicType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="IntrinsicType" /> class.</para>
        /// </summary>
        public IntrinsicType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("FunctionName")]
        public string FunctionName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LogicalType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogicalType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LogicalType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LogicalType" /> class.</para>
        /// </summary>
        public LogicalType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Operation")]
        public LogicalOperationType Operation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LogicalOperationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum LogicalOperationType
    {
        
        AND,
        
        IMPLIES,
        
        [System.Xml.Serialization.XmlEnumAttribute("IS NOT NULL")]
        IS_NOT_NULL,
        
        [System.Xml.Serialization.XmlEnumAttribute("IS NULL")]
        IS_NULL,
        
        IS,
        
        IsFalseOrNull,
        
        NOT,
        
        OR,
        
        XOR,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MultAssignType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MultAssignType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<AssignType> _assign;
        
        [System.Xml.Serialization.XmlElementAttribute("Assign")]
        public System.Collections.ObjectModel.Collection<AssignType> Assign
        {
            get
            {
                return this._assign;
            }
            private set
            {
                this._assign = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Assign-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Assign collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AssignSpecified
        {
            get
            {
                return (this.Assign.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MultAssignType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MultAssignType" /> class.</para>
        /// </summary>
        public MultAssignType()
        {
            this._assign = new System.Collections.ObjectModel.Collection<AssignType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScalarExpressionListType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScalarExpressionListType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ScalarExpressionListType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ScalarExpressionListType" /> class.</para>
        /// </summary>
        public ScalarExpressionListType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScalarSequenceType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScalarSequenceType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("FunctionName")]
        public string FunctionName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SubqueryType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubqueryType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType ScalarOperator { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Operation")]
        public SubqueryOperationType Operation { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RelOpType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RelOpType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _outputList;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("OutputList")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> OutputList
        {
            get
            {
                return this._outputList;
            }
            private set
            {
                this._outputList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RelOpType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RelOpType" /> class.</para>
        /// </summary>
        public RelOpType()
        {
            this._outputList = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._runTimeInformation = new System.Collections.ObjectModel.Collection<RunTimeInformationTypeRunTimeCountersPerThread>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Warnings")]
        public WarningsType Warnings { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("MemoryFractions")]
        public MemoryFractionsType MemoryFractions { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RunTimeInformationTypeRunTimeCountersPerThread> _runTimeInformation;
        
        [System.Xml.Serialization.XmlArrayAttribute("RunTimeInformation")]
        [System.Xml.Serialization.XmlArrayItemAttribute("RunTimeCountersPerThread", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<RunTimeInformationTypeRunTimeCountersPerThread> RunTimeInformation
        {
            get
            {
                return this._runTimeInformation;
            }
            private set
            {
                this._runTimeInformation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RunTimeInformation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RunTimeInformation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RunTimeInformationSpecified
        {
            get
            {
                return (this.RunTimeInformation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("RunTimePartitionSummary")]
        public RunTimePartitionSummaryType RunTimePartitionSummary { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("InternalInfo")]
        public InternalInfoType InternalInfo { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("AdaptiveJoin")]
        public AdaptiveJoinType AdaptiveJoin { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Assert")]
        public FilterType Assert { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("BatchHashTableBuild")]
        public BatchHashTableBuildType BatchHashTableBuild { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Bitmap")]
        public BitmapType Bitmap { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Collapse")]
        public CollapseType Collapse { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ComputeScalar")]
        public ComputeScalarType ComputeScalar { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Concat")]
        public ConcatType Concat { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ConstantScan")]
        public ConstantScanType ConstantScan { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("CreateIndex")]
        public CreateIndexType CreateIndex { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("DeletedScan")]
        public RowsetType DeletedScan { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Extension")]
        public UDXType Extension { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Filter")]
        public FilterType Filter { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ForeignKeyReferencesCheck")]
        public ForeignKeyReferencesCheckType ForeignKeyReferencesCheck { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Generic")]
        public GenericType Generic { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Hash")]
        public HashType Hash { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("IndexScan")]
        public IndexScanType IndexScan { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("InsertedScan")]
        public RowsetType InsertedScan { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("LogRowScan")]
        public RelOpBaseType LogRowScan { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Merge")]
        public MergeType Merge { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("MergeInterval")]
        public SimpleIteratorOneChildType MergeInterval { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("NestedLoops")]
        public NestedLoopsType NestedLoops { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OnlineIndex")]
        public CreateIndexType OnlineIndex { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Parallelism")]
        public ParallelismType Parallelism { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ParameterTableScan")]
        public RelOpBaseType ParameterTableScan { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("PrintDataflow")]
        public RelOpBaseType PrintDataflow { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Put")]
        public PutType Put { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("RemoteFetch")]
        public RemoteFetchType RemoteFetch { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("RemoteModify")]
        public RemoteModifyType RemoteModify { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("RemoteQuery")]
        public RemoteQueryType RemoteQuery { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("RemoteRange")]
        public RemoteRangeType RemoteRange { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("RemoteScan")]
        public RemoteType RemoteScan { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("RowCountSpool")]
        public SpoolType RowCountSpool { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarInsert")]
        public ScalarInsertType ScalarInsert { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Segment")]
        public SegmentType Segment { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Sequence")]
        public SequenceType Sequence { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("SequenceProject")]
        public ComputeScalarType SequenceProject { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("SimpleUpdate")]
        public SimpleUpdateType SimpleUpdate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Sort")]
        public SortType Sort { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Split")]
        public SplitType Split { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Spool")]
        public SpoolType Spool { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("StreamAggregate")]
        public StreamAggregateType StreamAggregate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Switch")]
        public SwitchType Switch { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TableScan")]
        public TableScanType TableScan { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TableValuedFunction")]
        public TableValuedFunctionType TableValuedFunction { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Top")]
        public TopType Top { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TopSort")]
        public TopSortType TopSort { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Update")]
        public UpdateType Update { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("WindowSpool")]
        public WindowType WindowSpool { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("WindowAggregate")]
        public WindowAggregateType WindowAggregate { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("AvgRowSize")]
        public double AvgRowSize { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimateCPU")]
        public double EstimateCPU { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimateIO")]
        public double EstimateIO { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimateRebinds")]
        public double EstimateRebinds { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimateRewinds")]
        public double EstimateRewinds { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedExecutionMode")]
        public ExecutionModeType EstimatedExecutionMode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EstimatedExecutionMode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedExecutionMode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedExecutionModeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("GroupExecuted")]
        public bool GroupExecuted { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GroupExecuted-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GroupExecuted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupExecutedSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimateRows")]
        public double EstimateRows { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedRowsRead")]
        public double EstimatedRowsRead { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EstimatedRowsRead-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedRowsRead property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedRowsReadSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("LogicalOp")]
        public LogicalOpType LogicalOp { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("NodeId")]
        public int NodeId { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Parallel")]
        public bool Parallel { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("RemoteDataAccess")]
        public bool RemoteDataAccess { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoteDataAccess-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RemoteDataAccess property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemoteDataAccessSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Partitioned")]
        public bool Partitioned { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Partitioned-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Partitioned property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartitionedSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("PhysicalOp")]
        public PhysicalOpType PhysicalOp { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("IsAdaptive")]
        public bool IsAdaptive { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsAdaptive-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsAdaptive property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAdaptiveSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("AdaptiveThresholdRows")]
        public double AdaptiveThresholdRows { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AdaptiveThresholdRows-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AdaptiveThresholdRows property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AdaptiveThresholdRowsSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedTotalSubtreeCost")]
        public double EstimatedTotalSubtreeCost { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("TableCardinality")]
        public double TableCardinality { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TableCardinality-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TableCardinality property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TableCardinalitySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("StatsCollectionId")]
        public ulong StatsCollectionId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatsCollectionId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StatsCollectionId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatsCollectionIdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedJoinType")]
        public PhysicalOpType EstimatedJoinType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EstimatedJoinType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedJoinType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedJoinTypeSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>For memory consuming relational operators, show fraction of memory grant iterator will use</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("For memory consuming relational operators, show fraction of memory grant iterator" +
        " will use")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MemoryFractionsType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemoryFractionsType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Input")]
        public double Input { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Output")]
        public double Output { get; set; }
    }
    
    /// <summary>
    /// <para>Runtime information provided from statistics_xml for each relational iterator</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Runtime information provided from statistics_xml for each relational iterator")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RunTimeInformationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunTimeInformationType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RunTimeInformationTypeRunTimeCountersPerThread> _runTimeCountersPerThread;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RunTimeCountersPerThread")]
        public System.Collections.ObjectModel.Collection<RunTimeInformationTypeRunTimeCountersPerThread> RunTimeCountersPerThread
        {
            get
            {
                return this._runTimeCountersPerThread;
            }
            private set
            {
                this._runTimeCountersPerThread = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RunTimeInformationType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RunTimeInformationType" /> class.</para>
        /// </summary>
        public RunTimeInformationType()
        {
            this._runTimeCountersPerThread = new System.Collections.ObjectModel.Collection<RunTimeInformationTypeRunTimeCountersPerThread>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RunTimeInformationTypeRunTimeCountersPerThread", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunTimeInformationTypeRunTimeCountersPerThread
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Thread")]
        public int Thread { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("BrickId")]
        public int BrickId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BrickId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BrickId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BrickIdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualRebinds")]
        public ulong ActualRebinds { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualRebinds-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualRebinds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualRebindsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualRewinds")]
        public ulong ActualRewinds { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualRewinds-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualRewinds property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualRewindsSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ActualRows")]
        public ulong ActualRows { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualRowsRead")]
        public ulong ActualRowsRead { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualRowsRead-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualRowsRead property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualRowsReadSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Batches")]
        public ulong Batches { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Batches-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Batches property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BatchesSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ActualEndOfScans")]
        public ulong ActualEndOfScans { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ActualExecutions")]
        public ulong ActualExecutions { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualExecutionMode")]
        public ExecutionModeType ActualExecutionMode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualExecutionMode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualExecutionMode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualExecutionModeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("TaskAddr")]
        public ulong TaskAddr { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TaskAddr-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TaskAddr property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskAddrSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("SchedulerId")]
        public ulong SchedulerId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SchedulerId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SchedulerId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SchedulerIdSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("FirstActiveTime")]
        public ulong FirstActiveTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FirstActiveTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstActiveTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstActiveTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("LastActiveTime")]
        public ulong LastActiveTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastActiveTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastActiveTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastActiveTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("OpenTime")]
        public ulong OpenTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OpenTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OpenTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OpenTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("FirstRowTime")]
        public ulong FirstRowTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FirstRowTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstRowTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstRowTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("LastRowTime")]
        public ulong LastRowTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastRowTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastRowTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastRowTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CloseTime")]
        public ulong CloseTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CloseTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CloseTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CloseTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualElapsedms")]
        public ulong ActualElapsedms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualElapsedms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualElapsedms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualElapsedmsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualCPUms")]
        public ulong ActualCPUms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualCPUms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualCPUms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualCPUmsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualScans")]
        public ulong ActualScans { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualScans-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualScans property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualScansSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualLogicalReads")]
        public ulong ActualLogicalReads { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualLogicalReads-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualLogicalReads property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualLogicalReadsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualPhysicalReads")]
        public ulong ActualPhysicalReads { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualPhysicalReads-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualPhysicalReads property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualPhysicalReadsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualReadAheads")]
        public ulong ActualReadAheads { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualReadAheads-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualReadAheads property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualReadAheadsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualLobLogicalReads")]
        public ulong ActualLobLogicalReads { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualLobLogicalReads-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualLobLogicalReads property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualLobLogicalReadsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualLobPhysicalReads")]
        public ulong ActualLobPhysicalReads { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualLobPhysicalReads-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualLobPhysicalReads property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualLobPhysicalReadsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualLobReadAheads")]
        public ulong ActualLobReadAheads { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualLobReadAheads-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualLobReadAheads property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualLobReadAheadsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("SegmentReads")]
        public int SegmentReads { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SegmentReads-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SegmentReads property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SegmentReadsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("SegmentSkips")]
        public int SegmentSkips { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SegmentSkips-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SegmentSkips property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SegmentSkipsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualLocallyAggregatedRows")]
        public ulong ActualLocallyAggregatedRows { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualLocallyAggregatedRows-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualLocallyAggregatedRows property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualLocallyAggregatedRowsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("InputMemoryGrant")]
        public ulong InputMemoryGrant { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InputMemoryGrant-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InputMemoryGrant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InputMemoryGrantSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("OutputMemoryGrant")]
        public ulong OutputMemoryGrant { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutputMemoryGrant-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutputMemoryGrant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputMemoryGrantSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("UsedMemoryGrant")]
        public ulong UsedMemoryGrant { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsedMemoryGrant-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsedMemoryGrant property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsedMemoryGrantSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("IsInterleavedExecuted")]
        public bool IsInterleavedExecuted { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsInterleavedExecuted-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsInterleavedExecuted property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsInterleavedExecutedSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ActualJoinType")]
        public PhysicalOpType ActualJoinType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualJoinType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualJoinType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualJoinTypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ExecutionModeType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ExecutionModeType
    {
        
        Row,
        
        Batch,
    }
    
    /// <summary>
    /// <para>Each of the physical operator is an iterator. An iterator
    ///                         can answer three method calls: Init(), GetNext(), and Close().
    ///                         Upon receiving an Init() call, an iterator initializes itself,
    ///                         setting up any data structures if necessary. Upon receiving a
    ///                         GetNext() call, the iterator produces the "next" packet of 
    ///                         data and gives it to the iterator that made the GetNext() call.
    ///                         To produce the "next" packet of data, the iterator may have to
    ///                         make zero or more GetNext() (or even Init()) calls to its 
    ///                         children. Upon receiving a Close() call, an iterator performs
    ///                         some clean-up operations and shuts itself down. Typically, an
    ///                         iterator receives one Init() call, followed by many GetNext()
    ///                         calls, and then a single Close() call.
    ///
    ///                         The "query" portion of a T-SQL statement is typically a tree
    ///                         made up of iterators.  
    ///
    ///                         Usually, there is a one-to-many mapping among logical operators
    ///                         and physical operators. That is, usually multiple physical operators
    ///                         can implement a logical operator. In some cases in SQL Server,
    ///                         however, a physical operator can implement multiple logical operators.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"Each of the physical operator is an iterator. An iterator can answer three method calls: Init(), GetNext(), and Close(). Upon receiving an Init() call, an iterator initializes itself, setting up any data structures if necessary. Upon receiving a GetNext() call, the iterator produces the ""next"" packet of data and gives it to the iterator that made the GetNext() call. To produce the ""next"" packet of data, the iterator may have to make zero or more GetNext() (or even Init()) calls to its children. Upon receiving a Close() call, an iterator performs some clean-up operations and shuts itself down. Typically, an iterator receives one Init() call, followed by many GetNext() calls, and then a single Close() call. The ""query"" portion of a T-SQL statement is typically a tree made up of iterators. Usually, there is a one-to-many mapping among logical operators and physical operators. That is, usually multiple physical operators can implement a logical operator. In some cases in SQL Server, however, a physical operator can implement multiple logical operators.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PhysicalOpType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum PhysicalOpType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("Adaptive Join")]
        Adaptive_Join,
        
        Assert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Batch Hash Table Build")]
        Batch_Hash_Table_Build,
        
        Bitmap,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Delete")]
        Clustered_Index_Delete,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Insert")]
        Clustered_Index_Insert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Scan")]
        Clustered_Index_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Seek")]
        Clustered_Index_Seek,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Update")]
        Clustered_Index_Update,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Merge")]
        Clustered_Index_Merge,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Update")]
        Clustered_Update,
        
        Collapse,
        
        [System.Xml.Serialization.XmlEnumAttribute("Columnstore Index Delete")]
        Columnstore_Index_Delete,
        
        [System.Xml.Serialization.XmlEnumAttribute("Columnstore Index Insert")]
        Columnstore_Index_Insert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Columnstore Index Merge")]
        Columnstore_Index_Merge,
        
        [System.Xml.Serialization.XmlEnumAttribute("Columnstore Index Scan")]
        Columnstore_Index_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Columnstore Index Update")]
        Columnstore_Index_Update,
        
        [System.Xml.Serialization.XmlEnumAttribute("Compute Scalar")]
        Compute_Scalar,
        
        Concatenation,
        
        [System.Xml.Serialization.XmlEnumAttribute("Constant Scan")]
        Constant_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Deleted Scan")]
        Deleted_Scan,
        
        Filter,
        
        [System.Xml.Serialization.XmlEnumAttribute("Foreign Key References Check")]
        Foreign_Key_References_Check,
        
        Generic,
        
        [System.Xml.Serialization.XmlEnumAttribute("Hash Match")]
        Hash_Match,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Delete")]
        Index_Delete,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Insert")]
        Index_Insert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Scan")]
        Index_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Seek")]
        Index_Seek,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Spool")]
        Index_Spool,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Update")]
        Index_Update,
        
        [System.Xml.Serialization.XmlEnumAttribute("Inserted Scan")]
        Inserted_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Log Row Scan")]
        Log_Row_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Merge Interval")]
        Merge_Interval,
        
        [System.Xml.Serialization.XmlEnumAttribute("Merge Join")]
        Merge_Join,
        
        [System.Xml.Serialization.XmlEnumAttribute("Nested Loops")]
        Nested_Loops,
        
        [System.Xml.Serialization.XmlEnumAttribute("Online Index Insert")]
        Online_Index_Insert,
        
        Parallelism,
        
        [System.Xml.Serialization.XmlEnumAttribute("Parameter Table Scan")]
        Parameter_Table_Scan,
        
        Print,
        
        Put,
        
        Rank,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Delete")]
        Remote_Delete,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Index Scan")]
        Remote_Index_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Index Seek")]
        Remote_Index_Seek,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Insert")]
        Remote_Insert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Query")]
        Remote_Query,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Scan")]
        Remote_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Update")]
        Remote_Update,
        
        [System.Xml.Serialization.XmlEnumAttribute("RID Lookup")]
        RID_Lookup,
        
        [System.Xml.Serialization.XmlEnumAttribute("Row Count Spool")]
        Row_Count_Spool,
        
        Segment,
        
        Sequence,
        
        [System.Xml.Serialization.XmlEnumAttribute("Sequence Project")]
        Sequence_Project,
        
        Sort,
        
        Split,
        
        [System.Xml.Serialization.XmlEnumAttribute("Stream Aggregate")]
        Stream_Aggregate,
        
        Switch,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table Delete")]
        Table_Delete,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table Insert")]
        Table_Insert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table Merge")]
        Table_Merge,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table Scan")]
        Table_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table Spool")]
        Table_Spool,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table Update")]
        Table_Update,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table-valued function")]
        Table_Valued_Function,
        
        Top,
        
        UDX,
        
        [System.Xml.Serialization.XmlEnumAttribute("Window Aggregate")]
        Window_Aggregate,
        
        [System.Xml.Serialization.XmlEnumAttribute("Window Spool")]
        Window_Spool,
        
        [System.Xml.Serialization.XmlEnumAttribute("Key Lookup")]
        Key_Lookup,
    }
    
    /// <summary>
    /// <para>Runtime partition information provided in statistics xml for each relational iterator that support partitioning</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Runtime partition information provided in statistics xml for each relational iter" +
        "ator that support partitioning")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RunTimePartitionSummaryType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunTimePartitionSummaryType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("PartitionsAccessed")]
        public RunTimePartitionSummaryTypePartitionsAccessed PartitionsAccessed { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RunTimePartitionSummaryTypePartitionsAccessed", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunTimePartitionSummaryTypePartitionsAccessed
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RunTimePartitionSummaryTypePartitionsAccessedPartitionRange> _partitionRange;
        
        [System.Xml.Serialization.XmlElementAttribute("PartitionRange")]
        public System.Collections.ObjectModel.Collection<RunTimePartitionSummaryTypePartitionsAccessedPartitionRange> PartitionRange
        {
            get
            {
                return this._partitionRange;
            }
            private set
            {
                this._partitionRange = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PartitionRange-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PartitionRange collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartitionRangeSpecified
        {
            get
            {
                return (this.PartitionRange.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RunTimePartitionSummaryTypePartitionsAccessed" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RunTimePartitionSummaryTypePartitionsAccessed" /> class.</para>
        /// </summary>
        public RunTimePartitionSummaryTypePartitionsAccessed()
        {
            this._partitionRange = new System.Collections.ObjectModel.Collection<RunTimePartitionSummaryTypePartitionsAccessedPartitionRange>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("PartitionCount")]
        public ulong PartitionCount { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RunTimePartitionSummaryTypePartitionsAccessedPartitionRange", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunTimePartitionSummaryTypePartitionsAccessedPartitionRange
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Start")]
        public ulong Start { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("End")]
        public ulong End { get; set; }
    }
    
    /// <summary>
    /// <para>The Adaptive Join element replaces a adaptive concat with Hash Join and Nested loops as inputs. This element
    ///				will have 3 inputs the two children of the HJ and the inner child of the NLJ. We append the required HJ and NLJ properties to the new 
    ///				AdaptiveJoin showplan element.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"The Adaptive Join element replaces a adaptive concat with Hash Join and Nested loops as inputs. This element will have 3 inputs the two children of the HJ and the inner child of the NLJ. We append the required HJ and NLJ properties to the new AdaptiveJoin showplan element.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AdaptiveJoinType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdaptiveJoinType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _hashKeysBuild;
        
        [System.Xml.Serialization.XmlArrayAttribute("HashKeysBuild")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> HashKeysBuild
        {
            get
            {
                return this._hashKeysBuild;
            }
            private set
            {
                this._hashKeysBuild = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HashKeysBuild-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the HashKeysBuild collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HashKeysBuildSpecified
        {
            get
            {
                return (this.HashKeysBuild.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="AdaptiveJoinType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="AdaptiveJoinType" /> class.</para>
        /// </summary>
        public AdaptiveJoinType()
        {
            this._hashKeysBuild = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._hashKeysProbe = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._outerReferences = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._relOp = new System.Collections.ObjectModel.Collection<RelOpType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _hashKeysProbe;
        
        [System.Xml.Serialization.XmlArrayAttribute("HashKeysProbe")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> HashKeysProbe
        {
            get
            {
                return this._hashKeysProbe;
            }
            private set
            {
                this._hashKeysProbe = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HashKeysProbe-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the HashKeysProbe collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HashKeysProbeSpecified
        {
            get
            {
                return (this.HashKeysProbe.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BuildResidual")]
        public ScalarExpressionType BuildResidual { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ProbeResidual")]
        public ScalarExpressionType ProbeResidual { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("StarJoinInfo")]
        public StarJoinInfoType StarJoinInfo { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Predicate")]
        public ScalarExpressionType Predicate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("PassThru")]
        public ScalarExpressionType PassThru { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _outerReferences;
        
        [System.Xml.Serialization.XmlArrayAttribute("OuterReferences")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> OuterReferences
        {
            get
            {
                return this._outerReferences;
            }
            private set
            {
                this._outerReferences = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OuterReferences-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OuterReferences collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OuterReferencesSpecified
        {
            get
            {
                return (this.OuterReferences.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PartitionId")]
        public SingleColumnReferenceType PartitionId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelOpType> _relOp;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public System.Collections.ObjectModel.Collection<RelOpType> RelOp
        {
            get
            {
                return this._relOp;
            }
            private set
            {
                this._relOp = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("BitmapCreator")]
        public bool BitmapCreator { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BitmapCreator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BitmapCreator property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitmapCreatorSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Optimized")]
        public bool Optimized { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RelOpBaseType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdaptiveJoinType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BatchHashTableBuildType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BitmapType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CollapseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ComputeScalarType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConcatType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConstantScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateIndexType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FilterType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ForeignKeyReferencesCheckType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HashType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndexScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MergeType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NestedLoopsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParallelismType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PutType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteFetchType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteModifyType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteQueryType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteRangeType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RowsetType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScalarInsertType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SegmentType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SequenceType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleIteratorOneChildType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleUpdateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SortType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SplitType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpoolType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StreamAggregateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SwitchType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TableScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TableValuedFunctionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TopSortType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TopType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UDXType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WindowAggregateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WindowType))]
    public partial class RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DefinedValuesListTypeDefinedValue> _definedValues;
        
        [System.Xml.Serialization.XmlArrayAttribute("DefinedValues")]
        [System.Xml.Serialization.XmlArrayItemAttribute("DefinedValue", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<DefinedValuesListTypeDefinedValue> DefinedValues
        {
            get
            {
                return this._definedValues;
            }
            private set
            {
                this._definedValues = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DefinedValues-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DefinedValues collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefinedValuesSpecified
        {
            get
            {
                return (this.DefinedValues.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RelOpBaseType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RelOpBaseType" /> class.</para>
        /// </summary>
        public RelOpBaseType()
        {
            this._definedValues = new System.Collections.ObjectModel.Collection<DefinedValuesListTypeDefinedValue>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("InternalInfo")]
        public InternalInfoType InternalInfo { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DefinedValuesListType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DefinedValuesListType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<DefinedValuesListTypeDefinedValue> _definedValue;
        
        [System.Xml.Serialization.XmlElementAttribute("DefinedValue")]
        public System.Collections.ObjectModel.Collection<DefinedValuesListTypeDefinedValue> DefinedValue
        {
            get
            {
                return this._definedValue;
            }
            private set
            {
                this._definedValue = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DefinedValue-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DefinedValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefinedValueSpecified
        {
            get
            {
                return (this.DefinedValue.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DefinedValuesListType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DefinedValuesListType" /> class.</para>
        /// </summary>
        public DefinedValuesListType()
        {
            this._definedValue = new System.Collections.ObjectModel.Collection<DefinedValuesListTypeDefinedValue>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DefinedValuesListTypeDefinedValue", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DefinedValuesListTypeDefinedValue
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _valueVector;
        
        [System.Xml.Serialization.XmlArrayAttribute("ValueVector")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> ValueVector
        {
            get
            {
                return this._valueVector;
            }
            private set
            {
                this._valueVector = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ValueVector-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ValueVector collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueVectorSpecified
        {
            get
            {
                return (this.ValueVector.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DefinedValuesListTypeDefinedValue" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DefinedValuesListTypeDefinedValue" /> class.</para>
        /// </summary>
        public DefinedValuesListTypeDefinedValue()
        {
            this._valueVector = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference")]
        public ColumnReferenceType ColumnReference { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType ScalarOperator { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DefinedValuesListTypeDefinedValueValueVector", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DefinedValuesListTypeDefinedValueValueVector
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _columnReference;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> ColumnReference
        {
            get
            {
                return this._columnReference;
            }
            private set
            {
                this._columnReference = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="DefinedValuesListTypeDefinedValueValueVector" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="DefinedValuesListTypeDefinedValueValueVector" /> class.</para>
        /// </summary>
        public DefinedValuesListTypeDefinedValueValueVector()
        {
            this._columnReference = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
    }
    
    /// <summary>
    /// <para>Additional information about Star Join structure.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Additional information about Star Join structure.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StarJoinInfoType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StarJoinInfoType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("Root")]
        public bool Root { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Root-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Root property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RootSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("OperationType")]
        public StarJoinInfoTypeOperationType OperationType { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StarJoinInfoTypeOperationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum StarJoinInfoTypeOperationType
    {
        
        Fetch,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Intersection")]
        Index_Intersection,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Filter")]
        Index_Filter,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Lookup")]
        Index_Lookup,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SingleColumnReferenceType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SingleColumnReferenceType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference")]
        public ColumnReferenceType ColumnReference { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FilterType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterType : RelOpBaseType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Predicate")]
        public ScalarExpressionType Predicate { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("StartupExpression")]
        public bool StartupExpression { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BatchHashTableBuildType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchHashTableBuildType : RelOpBaseType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("BitmapCreator")]
        public bool BitmapCreator { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BitmapCreator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BitmapCreator property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitmapCreatorSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BitmapType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BitmapType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _hashKeys;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("HashKeys")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> HashKeys
        {
            get
            {
                return this._hashKeys;
            }
            private set
            {
                this._hashKeys = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="BitmapType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="BitmapType" /> class.</para>
        /// </summary>
        public BitmapType()
        {
            this._hashKeys = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CollapseType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CollapseType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _groupBy;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("GroupBy")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> GroupBy
        {
            get
            {
                return this._groupBy;
            }
            private set
            {
                this._groupBy = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="CollapseType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CollapseType" /> class.</para>
        /// </summary>
        public CollapseType()
        {
            this._groupBy = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ComputeScalarType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ComputeScalarType : RelOpBaseType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ComputeSequence")]
        public bool ComputeSequence { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ComputeSequence-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ComputeSequence property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ComputeSequenceSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConcatType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SwitchType))]
    public partial class ConcatType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelOpType> _relOp;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public System.Collections.ObjectModel.Collection<RelOpType> RelOp
        {
            get
            {
                return this._relOp;
            }
            private set
            {
                this._relOp = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConcatType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConcatType" /> class.</para>
        /// </summary>
        public ConcatType()
        {
            this._relOp = new System.Collections.ObjectModel.Collection<RelOpType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConstantScanType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConstantScanType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarExpressionListType> _values;
        
        [System.Xml.Serialization.XmlArrayAttribute("Values")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Row", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ScalarExpressionListType> Values
        {
            get
            {
                return this._values;
            }
            private set
            {
                this._values = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Values-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Values collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValuesSpecified
        {
            get
            {
                return (this.Values.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConstantScanType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConstantScanType" /> class.</para>
        /// </summary>
        public ConstantScanType()
        {
            this._values = new System.Collections.ObjectModel.Collection<ScalarExpressionListType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConstantScanTypeValues", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConstantScanTypeValues
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarExpressionListType> _row;
        
        [System.Xml.Serialization.XmlElementAttribute("Row")]
        public System.Collections.ObjectModel.Collection<ScalarExpressionListType> Row
        {
            get
            {
                return this._row;
            }
            private set
            {
                this._row = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Row-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Row collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowSpecified
        {
            get
            {
                return (this.Row.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ConstantScanTypeValues" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ConstantScanTypeValues" /> class.</para>
        /// </summary>
        public ConstantScanTypeValues()
        {
            this._row = new System.Collections.ObjectModel.Collection<ScalarExpressionListType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CreateIndexType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateIndexType : RowsetType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RowsetType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateIndexType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndexScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScalarInsertType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleUpdateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TableScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateType))]
    public partial class RowsetType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ObjectType> _object;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Object")]
        public System.Collections.ObjectModel.Collection<ObjectType> Object
        {
            get
            {
                return this._object;
            }
            private set
            {
                this._object = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RowsetType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RowsetType" /> class.</para>
        /// </summary>
        public RowsetType()
        {
            this._object = new System.Collections.ObjectModel.Collection<ObjectType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UDXType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UDXType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _usedUDXColumns;
        
        [System.Xml.Serialization.XmlArrayAttribute("UsedUDXColumns")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> UsedUDXColumns
        {
            get
            {
                return this._usedUDXColumns;
            }
            private set
            {
                this._usedUDXColumns = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsedUDXColumns-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UsedUDXColumns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsedUDXColumnsSpecified
        {
            get
            {
                return (this.UsedUDXColumns.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UDXType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UDXType" /> class.</para>
        /// </summary>
        public UDXType()
        {
            this._usedUDXColumns = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("UDXName")]
        public string UDXName { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ForeignKeyReferencesCheckType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForeignKeyReferencesCheckType : RelOpBaseType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ForeignKeyReferenceCheckType> _foreignKeyReferenceCheck;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ForeignKeyReferenceCheck")]
        public System.Collections.ObjectModel.Collection<ForeignKeyReferenceCheckType> ForeignKeyReferenceCheck
        {
            get
            {
                return this._foreignKeyReferenceCheck;
            }
            private set
            {
                this._foreignKeyReferenceCheck = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ForeignKeyReferencesCheckType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ForeignKeyReferencesCheckType" /> class.</para>
        /// </summary>
        public ForeignKeyReferencesCheckType()
        {
            this._foreignKeyReferenceCheck = new System.Collections.ObjectModel.Collection<ForeignKeyReferenceCheckType>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ForeignKeyReferencesCount")]
        public int ForeignKeyReferencesCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ForeignKeyReferencesCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForeignKeyReferencesCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForeignKeyReferencesCountSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("NoMatchingIndexCount")]
        public int NoMatchingIndexCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NoMatchingIndexCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NoMatchingIndexCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoMatchingIndexCountSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("PartialMatchingIndexCount")]
        public int PartialMatchingIndexCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PartialMatchingIndexCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartialMatchingIndexCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartialMatchingIndexCountSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ForeignKeyReferenceCheckType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForeignKeyReferenceCheckType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("IndexScan")]
        public IndexScanType IndexScan { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IndexScanType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndexScanType : RowsetType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("SeekPredicates")]
        public SeekPredicatesType SeekPredicates { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarExpressionType> _predicate;
        
        [System.Xml.Serialization.XmlElementAttribute("Predicate")]
        public System.Collections.ObjectModel.Collection<ScalarExpressionType> Predicate
        {
            get
            {
                return this._predicate;
            }
            private set
            {
                this._predicate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Predicate-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Predicate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PredicateSpecified
        {
            get
            {
                return (this.Predicate.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="IndexScanType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="IndexScanType" /> class.</para>
        /// </summary>
        public IndexScanType()
        {
            this._predicate = new System.Collections.ObjectModel.Collection<ScalarExpressionType>();
            this._indexedViewInfo = new System.Collections.ObjectModel.Collection<ObjectType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PartitionId")]
        public SingleColumnReferenceType PartitionId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ObjectType> _indexedViewInfo;
        
        [System.Xml.Serialization.XmlArrayAttribute("IndexedViewInfo")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Object", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ObjectType> IndexedViewInfo
        {
            get
            {
                return this._indexedViewInfo;
            }
            private set
            {
                this._indexedViewInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IndexedViewInfo-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the IndexedViewInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexedViewInfoSpecified
        {
            get
            {
                return (this.IndexedViewInfo.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Lookup")]
        public bool Lookup { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lookup-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lookup property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LookupSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Ordered")]
        public bool Ordered { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ScanDirection")]
        public OrderType ScanDirection { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScanDirection-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ScanDirection property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScanDirectionSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ForcedIndex")]
        public bool ForcedIndex { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ForcedIndex-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForcedIndex property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForcedIndexSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ForceSeek")]
        public bool ForceSeek { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ForceSeek-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForceSeek property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForceSeekSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ForceSeekColumnCount")]
        public int ForceSeekColumnCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ForceSeekColumnCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForceSeekColumnCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForceSeekColumnCountSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ForceScan")]
        public bool ForceScan { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ForceScan-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForceScan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForceScanSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("NoExpandHint")]
        public bool NoExpandHint { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NoExpandHint-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NoExpandHint property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoExpandHintSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Storage")]
        public StorageType Storage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Storage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Storage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StorageSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("DynamicSeek")]
        public bool DynamicSeek { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DynamicSeek-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DynamicSeek property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DynamicSeekSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SeekPredicatesType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeekPredicatesType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SeekPredicateType> _seekPredicate;
        
        [System.Xml.Serialization.XmlElementAttribute("SeekPredicate")]
        public System.Collections.ObjectModel.Collection<SeekPredicateType> SeekPredicate
        {
            get
            {
                return this._seekPredicate;
            }
            private set
            {
                this._seekPredicate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SeekPredicate-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SeekPredicate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeekPredicateSpecified
        {
            get
            {
                return (this.SeekPredicate.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SeekPredicatesType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SeekPredicatesType" /> class.</para>
        /// </summary>
        public SeekPredicatesType()
        {
            this._seekPredicate = new System.Collections.ObjectModel.Collection<SeekPredicateType>();
            this._seekPredicateNew = new System.Collections.ObjectModel.Collection<SeekPredicateNewType>();
            this._seekPredicatePart = new System.Collections.ObjectModel.Collection<SeekPredicatePartType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SeekPredicateNewType> _seekPredicateNew;
        
        [System.Xml.Serialization.XmlElementAttribute("SeekPredicateNew")]
        public System.Collections.ObjectModel.Collection<SeekPredicateNewType> SeekPredicateNew
        {
            get
            {
                return this._seekPredicateNew;
            }
            private set
            {
                this._seekPredicateNew = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SeekPredicateNew-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SeekPredicateNew collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeekPredicateNewSpecified
        {
            get
            {
                return (this.SeekPredicateNew.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SeekPredicatePartType> _seekPredicatePart;
        
        [System.Xml.Serialization.XmlElementAttribute("SeekPredicatePart")]
        public System.Collections.ObjectModel.Collection<SeekPredicatePartType> SeekPredicatePart
        {
            get
            {
                return this._seekPredicatePart;
            }
            private set
            {
                this._seekPredicatePart = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SeekPredicatePart-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SeekPredicatePart collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeekPredicatePartSpecified
        {
            get
            {
                return (this.SeekPredicatePart.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SeekPredicateType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeekPredicateType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Prefix")]
        public ScanRangeType Prefix { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("StartRange")]
        public ScanRangeType StartRange { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("EndRange")]
        public ScanRangeType EndRange { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("IsNotNull")]
        public SingleColumnReferenceType IsNotNull { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScanRangeType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScanRangeType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _rangeColumns;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("RangeColumns")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> RangeColumns
        {
            get
            {
                return this._rangeColumns;
            }
            private set
            {
                this._rangeColumns = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ScanRangeType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ScanRangeType" /> class.</para>
        /// </summary>
        public ScanRangeType()
        {
            this._rangeColumns = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._rangeExpressions = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _rangeExpressions;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("RangeExpressions")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ScalarOperator", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ScalarType> RangeExpressions
        {
            get
            {
                return this._rangeExpressions;
            }
            private set
            {
                this._rangeExpressions = value;
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ScanType")]
        public CompareOpType ScanType { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SeekPredicateNewType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeekPredicateNewType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SeekPredicateType> _seekKeys;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("SeekKeys")]
        public System.Collections.ObjectModel.Collection<SeekPredicateType> SeekKeys
        {
            get
            {
                return this._seekKeys;
            }
            private set
            {
                this._seekKeys = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SeekPredicateNewType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SeekPredicateNewType" /> class.</para>
        /// </summary>
        public SeekPredicateNewType()
        {
            this._seekKeys = new System.Collections.ObjectModel.Collection<SeekPredicateType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SeekPredicatePartType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeekPredicatePartType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SeekPredicateNewType> _seekPredicateNew;
        
        [System.Xml.Serialization.XmlElementAttribute("SeekPredicateNew")]
        public System.Collections.ObjectModel.Collection<SeekPredicateNewType> SeekPredicateNew
        {
            get
            {
                return this._seekPredicateNew;
            }
            private set
            {
                this._seekPredicateNew = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SeekPredicateNew-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SeekPredicateNew collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeekPredicateNewSpecified
        {
            get
            {
                return (this.SeekPredicateNew.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SeekPredicatePartType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SeekPredicatePartType" /> class.</para>
        /// </summary>
        public SeekPredicatePartType()
        {
            this._seekPredicateNew = new System.Collections.ObjectModel.Collection<SeekPredicateNewType>();
        }
    }
    
    /// <summary>
    /// <para>Additional information about an indexed view. It includes all tables in the query that were replaced by the indexed view.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Additional information about an indexed view. It includes all tables in the query" +
        " that were replaced by the indexed view.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IndexedViewInfoType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IndexedViewInfoType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ObjectType> _object;
        
        [System.Xml.Serialization.XmlElementAttribute("Object")]
        public System.Collections.ObjectModel.Collection<ObjectType> Object
        {
            get
            {
                return this._object;
            }
            private set
            {
                this._object = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Object-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Object collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ObjectSpecified
        {
            get
            {
                return (this.Object.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="IndexedViewInfoType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="IndexedViewInfoType" /> class.</para>
        /// </summary>
        public IndexedViewInfoType()
        {
            this._object = new System.Collections.ObjectModel.Collection<ObjectType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OrderType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum OrderType
    {
        
        BACKWARD,
        
        FORWARD,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GenericType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenericType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelOpType> _relOp;
        
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public System.Collections.ObjectModel.Collection<RelOpType> RelOp
        {
            get
            {
                return this._relOp;
            }
            private set
            {
                this._relOp = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RelOp-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RelOp collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RelOpSpecified
        {
            get
            {
                return (this.RelOp.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GenericType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GenericType" /> class.</para>
        /// </summary>
        public GenericType()
        {
            this._relOp = new System.Collections.ObjectModel.Collection<RelOpType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HashType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HashType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _hashKeysBuild;
        
        [System.Xml.Serialization.XmlArrayAttribute("HashKeysBuild")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> HashKeysBuild
        {
            get
            {
                return this._hashKeysBuild;
            }
            private set
            {
                this._hashKeysBuild = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HashKeysBuild-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the HashKeysBuild collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HashKeysBuildSpecified
        {
            get
            {
                return (this.HashKeysBuild.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="HashType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="HashType" /> class.</para>
        /// </summary>
        public HashType()
        {
            this._hashKeysBuild = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._hashKeysProbe = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._relOp = new System.Collections.ObjectModel.Collection<RelOpType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _hashKeysProbe;
        
        [System.Xml.Serialization.XmlArrayAttribute("HashKeysProbe")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> HashKeysProbe
        {
            get
            {
                return this._hashKeysProbe;
            }
            private set
            {
                this._hashKeysProbe = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HashKeysProbe-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the HashKeysProbe collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HashKeysProbeSpecified
        {
            get
            {
                return (this.HashKeysProbe.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("BuildResidual")]
        public ScalarExpressionType BuildResidual { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ProbeResidual")]
        public ScalarExpressionType ProbeResidual { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("StarJoinInfo")]
        public StarJoinInfoType StarJoinInfo { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelOpType> _relOp;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public System.Collections.ObjectModel.Collection<RelOpType> RelOp
        {
            get
            {
                return this._relOp;
            }
            private set
            {
                this._relOp = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("BitmapCreator")]
        public bool BitmapCreator { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BitmapCreator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BitmapCreator property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BitmapCreatorSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MergeType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MergeType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _innerSideJoinColumns;
        
        [System.Xml.Serialization.XmlArrayAttribute("InnerSideJoinColumns")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> InnerSideJoinColumns
        {
            get
            {
                return this._innerSideJoinColumns;
            }
            private set
            {
                this._innerSideJoinColumns = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InnerSideJoinColumns-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the InnerSideJoinColumns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InnerSideJoinColumnsSpecified
        {
            get
            {
                return (this.InnerSideJoinColumns.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MergeType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MergeType" /> class.</para>
        /// </summary>
        public MergeType()
        {
            this._innerSideJoinColumns = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._outerSideJoinColumns = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._relOp = new System.Collections.ObjectModel.Collection<RelOpType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _outerSideJoinColumns;
        
        [System.Xml.Serialization.XmlArrayAttribute("OuterSideJoinColumns")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> OuterSideJoinColumns
        {
            get
            {
                return this._outerSideJoinColumns;
            }
            private set
            {
                this._outerSideJoinColumns = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OuterSideJoinColumns-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OuterSideJoinColumns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OuterSideJoinColumnsSpecified
        {
            get
            {
                return (this.OuterSideJoinColumns.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("Residual")]
        public ScalarExpressionType Residual { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("PassThru")]
        public ScalarExpressionType PassThru { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("StarJoinInfo")]
        public StarJoinInfoType StarJoinInfo { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelOpType> _relOp;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public System.Collections.ObjectModel.Collection<RelOpType> RelOp
        {
            get
            {
                return this._relOp;
            }
            private set
            {
                this._relOp = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ManyToMany")]
        public bool ManyToMany { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ManyToMany-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ManyToMany property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ManyToManySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SimpleIteratorOneChildType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleIteratorOneChildType : RelOpBaseType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NestedLoopsType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NestedLoopsType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Predicate")]
        public ScalarExpressionType Predicate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("PassThru")]
        public ScalarExpressionType PassThru { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _outerReferences;
        
        [System.Xml.Serialization.XmlArrayAttribute("OuterReferences")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> OuterReferences
        {
            get
            {
                return this._outerReferences;
            }
            private set
            {
                this._outerReferences = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OuterReferences-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OuterReferences collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OuterReferencesSpecified
        {
            get
            {
                return (this.OuterReferences.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="NestedLoopsType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="NestedLoopsType" /> class.</para>
        /// </summary>
        public NestedLoopsType()
        {
            this._outerReferences = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._relOp = new System.Collections.ObjectModel.Collection<RelOpType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PartitionId")]
        public SingleColumnReferenceType PartitionId { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ProbeColumn")]
        public SingleColumnReferenceType ProbeColumn { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("StarJoinInfo")]
        public StarJoinInfoType StarJoinInfo { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelOpType> _relOp;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public System.Collections.ObjectModel.Collection<RelOpType> RelOp
        {
            get
            {
                return this._relOp;
            }
            private set
            {
                this._relOp = value;
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Optimized")]
        public bool Optimized { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WithOrderedPrefetch")]
        public bool WithOrderedPrefetch { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WithOrderedPrefetch-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithOrderedPrefetch property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithOrderedPrefetchSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WithUnorderedPrefetch")]
        public bool WithUnorderedPrefetch { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WithUnorderedPrefetch-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithUnorderedPrefetch property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithUnorderedPrefetchSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParallelismType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParallelismType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _partitionColumns;
        
        [System.Xml.Serialization.XmlArrayAttribute("PartitionColumns")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> PartitionColumns
        {
            get
            {
                return this._partitionColumns;
            }
            private set
            {
                this._partitionColumns = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PartitionColumns-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PartitionColumns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartitionColumnsSpecified
        {
            get
            {
                return (this.PartitionColumns.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ParallelismType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ParallelismType" /> class.</para>
        /// </summary>
        public ParallelismType()
        {
            this._partitionColumns = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
            this._orderBy = new System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn>();
            this._hashKeys = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn> _orderBy;
        
        [System.Xml.Serialization.XmlArrayAttribute("OrderBy")]
        [System.Xml.Serialization.XmlArrayItemAttribute("OrderByColumn", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn> OrderBy
        {
            get
            {
                return this._orderBy;
            }
            private set
            {
                this._orderBy = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OrderBy-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OrderBy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderBySpecified
        {
            get
            {
                return (this.OrderBy.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _hashKeys;
        
        [System.Xml.Serialization.XmlArrayAttribute("HashKeys")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> HashKeys
        {
            get
            {
                return this._hashKeys;
            }
            private set
            {
                this._hashKeys = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HashKeys-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the HashKeys collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HashKeysSpecified
        {
            get
            {
                return (this.HashKeys.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ProbeColumn")]
        public SingleColumnReferenceType ProbeColumn { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Predicate")]
        public ScalarExpressionType Predicate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Activation")]
        public ParallelismTypeActivation Activation { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("BrickRouting")]
        public ParallelismTypeBrickRouting BrickRouting { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("PartitioningType")]
        public PartitionType PartitioningType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PartitioningType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartitioningType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartitioningTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Remoting")]
        public bool Remoting { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Remoting-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Remoting property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RemotingSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("LocalParallelism")]
        public bool LocalParallelism { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocalParallelism-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LocalParallelism property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LocalParallelismSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("InRow")]
        public bool InRow { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InRow-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InRow property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InRowSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OrderByType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderByType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn> _orderByColumn;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("OrderByColumn")]
        public System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn> OrderByColumn
        {
            get
            {
                return this._orderByColumn;
            }
            private set
            {
                this._orderByColumn = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OrderByType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OrderByType" /> class.</para>
        /// </summary>
        public OrderByType()
        {
            this._orderByColumn = new System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OrderByTypeOrderByColumn", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderByTypeOrderByColumn
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference")]
        public ColumnReferenceType ColumnReference { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Ascending")]
        public bool Ascending { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParallelismTypeActivation", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParallelismTypeActivation
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Object")]
        public ObjectType Object { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Type")]
        public ParallelismTypeActivationType Type { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("FragmentElimination")]
        public string FragmentElimination { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParallelismTypeActivationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum ParallelismTypeActivationType
    {
        
        CloneLocation,
        
        Resource,
        
        SingleBrick,
        
        Region,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParallelismTypeBrickRouting", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParallelismTypeBrickRouting
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Object")]
        public ObjectType Object { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("FragmentIdColumn")]
        public SingleColumnReferenceType FragmentIdColumn { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PartitionType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum PartitionType
    {
        
        Broadcast,
        
        Demand,
        
        Hash,
        
        NoPartitioning,
        
        Range,
        
        RoundRobin,
        
        CloneLocation,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PutType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutType : RemoteQueryType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ShuffleType")]
        public string ShuffleType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ShuffleColumn")]
        public string ShuffleColumn { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RemoteQueryType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PutType))]
    public partial class RemoteQueryType : RemoteType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("RemoteQuery")]
        public string RemoteQuery { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RemoteType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PutType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteFetchType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteModifyType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteQueryType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteRangeType))]
    public partial class RemoteType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("RemoteDestination")]
        public string RemoteDestination { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("RemoteSource")]
        public string RemoteSource { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("RemoteObject")]
        public string RemoteObject { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RemoteFetchType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoteFetchType : RemoteType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RemoteModifyType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoteModifyType : RemoteType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("SetPredicate")]
        public ScalarExpressionType SetPredicate { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RemoteRangeType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoteRangeType : RemoteType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("SeekPredicates")]
        public SeekPredicatesType SeekPredicates { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SpoolType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpoolType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("SeekPredicate")]
        public SeekPredicateType SeekPredicate { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SeekPredicateType> _seekPredicateNew;
        
        [System.Xml.Serialization.XmlArrayAttribute("SeekPredicateNew")]
        [System.Xml.Serialization.XmlArrayItemAttribute("SeekKeys", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<SeekPredicateType> SeekPredicateNew
        {
            get
            {
                return this._seekPredicateNew;
            }
            private set
            {
                this._seekPredicateNew = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SeekPredicateNew-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SeekPredicateNew collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeekPredicateNewSpecified
        {
            get
            {
                return (this.SeekPredicateNew.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SpoolType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SpoolType" /> class.</para>
        /// </summary>
        public SpoolType()
        {
            this._seekPredicateNew = new System.Collections.ObjectModel.Collection<SeekPredicateType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Stack")]
        public bool Stack { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Stack-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Stack property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StackSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("PrimaryNodeId")]
        public int PrimaryNodeId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PrimaryNodeId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryNodeId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryNodeIdSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ScalarInsertType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScalarInsertType : RowsetType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("SetPredicate")]
        public ScalarExpressionType SetPredicate { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("DMLRequestSort")]
        public bool DMLRequestSort { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DMLRequestSort-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DMLRequestSort property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DMLRequestSortSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SegmentType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SegmentType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _groupBy;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("GroupBy")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> GroupBy
        {
            get
            {
                return this._groupBy;
            }
            private set
            {
                this._groupBy = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SegmentType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SegmentType" /> class.</para>
        /// </summary>
        public SegmentType()
        {
            this._groupBy = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("SegmentColumn")]
        public SingleColumnReferenceType SegmentColumn { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SequenceType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SequenceType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RelOpType> _relOp;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public System.Collections.ObjectModel.Collection<RelOpType> RelOp
        {
            get
            {
                return this._relOp;
            }
            private set
            {
                this._relOp = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SequenceType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SequenceType" /> class.</para>
        /// </summary>
        public SequenceType()
        {
            this._relOp = new System.Collections.ObjectModel.Collection<RelOpType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SimpleUpdateType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleUpdateType : RowsetType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("SeekPredicate")]
        public SeekPredicateType SeekPredicate { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SeekPredicateType> _seekPredicateNew;
        
        [System.Xml.Serialization.XmlArrayAttribute("SeekPredicateNew")]
        [System.Xml.Serialization.XmlArrayItemAttribute("SeekKeys", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<SeekPredicateType> SeekPredicateNew
        {
            get
            {
                return this._seekPredicateNew;
            }
            private set
            {
                this._seekPredicateNew = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SeekPredicateNew-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SeekPredicateNew collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SeekPredicateNewSpecified
        {
            get
            {
                return (this.SeekPredicateNew.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SimpleUpdateType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SimpleUpdateType" /> class.</para>
        /// </summary>
        public SimpleUpdateType()
        {
            this._seekPredicateNew = new System.Collections.ObjectModel.Collection<SeekPredicateType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("SetPredicate")]
        public ScalarExpressionType SetPredicate { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("DMLRequestSort")]
        public bool DMLRequestSort { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DMLRequestSort-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DMLRequestSort property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DMLRequestSortSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SortType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TopSortType))]
    public partial class SortType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn> _orderBy;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("OrderBy")]
        [System.Xml.Serialization.XmlArrayItemAttribute("OrderByColumn", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn> OrderBy
        {
            get
            {
                return this._orderBy;
            }
            private set
            {
                this._orderBy = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SortType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SortType" /> class.</para>
        /// </summary>
        public SortType()
        {
            this._orderBy = new System.Collections.ObjectModel.Collection<OrderByTypeOrderByColumn>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("PartitionId")]
        public SingleColumnReferenceType PartitionId { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Distinct")]
        public bool Distinct { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SplitType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("ActionColumn")]
        public SingleColumnReferenceType ActionColumn { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StreamAggregateType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StreamAggregateType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _groupBy;
        
        [System.Xml.Serialization.XmlArrayAttribute("GroupBy")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> GroupBy
        {
            get
            {
                return this._groupBy;
            }
            private set
            {
                this._groupBy = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GroupBy-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GroupBy collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupBySpecified
        {
            get
            {
                return (this.GroupBy.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="StreamAggregateType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StreamAggregateType" /> class.</para>
        /// </summary>
        public StreamAggregateType()
        {
            this._groupBy = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("RollupInfo")]
        public RollupInfoType RollupInfo { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    /// <summary>
    /// <para>Additional information about a rollup. The highest level is the number of group by columns.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Additional information about a rollup. The highest level is the number of group b" +
        "y columns.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RollupInfoType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RollupInfoType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RollupLevelType> _rollupLevel;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RollupLevel")]
        public System.Collections.ObjectModel.Collection<RollupLevelType> RollupLevel
        {
            get
            {
                return this._rollupLevel;
            }
            private set
            {
                this._rollupLevel = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RollupInfoType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RollupInfoType" /> class.</para>
        /// </summary>
        public RollupInfoType()
        {
            this._rollupLevel = new System.Collections.ObjectModel.Collection<RollupLevelType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("HighestLevel")]
        public int HighestLevel { get; set; }
    }
    
    /// <summary>
    /// <para>A level that is output by the rollup.  Level 0 is the base aggregation, equivalent to the statement without 'WITH ROLLUP'.  The highest level is the grand total, or group by all.  Level 0 is always output, and at least one higher level.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A level that is output by the rollup. Level 0 is the base aggregation, equivalent" +
        " to the statement without \'WITH ROLLUP\'. The highest level is the grand total, o" +
        "r group by all. Level 0 is always output, and at least one higher level.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RollupLevelType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RollupLevelType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Level")]
        public int Level { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SwitchType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwitchType : ConcatType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Predicate")]
        public ScalarExpressionType Predicate { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TableScanType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableScanType : RowsetType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Predicate")]
        public ScalarExpressionType Predicate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("PartitionId")]
        public SingleColumnReferenceType PartitionId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ObjectType> _indexedViewInfo;
        
        [System.Xml.Serialization.XmlArrayAttribute("IndexedViewInfo")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Object", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ObjectType> IndexedViewInfo
        {
            get
            {
                return this._indexedViewInfo;
            }
            private set
            {
                this._indexedViewInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IndexedViewInfo-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the IndexedViewInfo collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IndexedViewInfoSpecified
        {
            get
            {
                return (this.IndexedViewInfo.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TableScanType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TableScanType" /> class.</para>
        /// </summary>
        public TableScanType()
        {
            this._indexedViewInfo = new System.Collections.ObjectModel.Collection<ObjectType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Ordered")]
        public bool Ordered { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ForcedIndex")]
        public bool ForcedIndex { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ForcedIndex-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForcedIndex property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForcedIndexSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ForceScan")]
        public bool ForceScan { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ForceScan-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForceScan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForceScanSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("NoExpandHint")]
        public bool NoExpandHint { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NoExpandHint-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NoExpandHint property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoExpandHintSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Storage")]
        public StorageType Storage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Storage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Storage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StorageSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Typical user defined table valued function doesn't have a relational child element. If a relational child
    ///				is present then the operator is a special internal table valued function that hosts native code.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Typical user defined table valued function doesn\'t have a relational child elemen" +
        "t. If a relational child is present then the operator is a special internal tabl" +
        "e valued function that hosts native code.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TableValuedFunctionType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TableValuedFunctionType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Object")]
        public ObjectType Object { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Predicate")]
        public ScalarExpressionType Predicate { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _parameterList;
        
        [System.Xml.Serialization.XmlArrayAttribute("ParameterList")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ScalarOperator", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ScalarType> ParameterList
        {
            get
            {
                return this._parameterList;
            }
            private set
            {
                this._parameterList = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ParameterList-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ParameterList collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParameterListSpecified
        {
            get
            {
                return (this.ParameterList.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TableValuedFunctionType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TableValuedFunctionType" /> class.</para>
        /// </summary>
        public TableValuedFunctionType()
        {
            this._parameterList = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TopType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TopType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ColumnReferenceType> _tieColumns;
        
        [System.Xml.Serialization.XmlArrayAttribute("TieColumns")]
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ColumnReferenceType> TieColumns
        {
            get
            {
                return this._tieColumns;
            }
            private set
            {
                this._tieColumns = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TieColumns-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TieColumns collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TieColumnsSpecified
        {
            get
            {
                return (this.TieColumns.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TopType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TopType" /> class.</para>
        /// </summary>
        public TopType()
        {
            this._tieColumns = new System.Collections.ObjectModel.Collection<ColumnReferenceType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("OffsetExpression")]
        public ScalarExpressionType OffsetExpression { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("TopExpression")]
        public ScalarExpressionType TopExpression { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("RowCount")]
        public bool RowCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RowCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RowCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowCountSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Rows")]
        public int Rows { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Rows-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Rows property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("IsPercent")]
        public bool IsPercent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsPercent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsPercent property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPercentSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WithTies")]
        public bool WithTies { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WithTies-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithTies property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithTiesSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TopSortType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TopSortType : SortType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Rows")]
        public int Rows { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WithTies")]
        public bool WithTies { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WithTies-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithTies property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithTiesSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UpdateType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateType : RowsetType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SetPredicateElementType> _setPredicate;
        
        [System.Xml.Serialization.XmlElementAttribute("SetPredicate")]
        public System.Collections.ObjectModel.Collection<SetPredicateElementType> SetPredicate
        {
            get
            {
                return this._setPredicate;
            }
            private set
            {
                this._setPredicate = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SetPredicate-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SetPredicate collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SetPredicateSpecified
        {
            get
            {
                return (this.SetPredicate.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UpdateType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UpdateType" /> class.</para>
        /// </summary>
        public UpdateType()
        {
            this._setPredicate = new System.Collections.ObjectModel.Collection<SetPredicateElementType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ProbeColumn")]
        public SingleColumnReferenceType ProbeColumn { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ActionColumn")]
        public SingleColumnReferenceType ActionColumn { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("OriginalActionColumn")]
        public SingleColumnReferenceType OriginalActionColumn { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WithOrderedPrefetch")]
        public bool WithOrderedPrefetch { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WithOrderedPrefetch-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithOrderedPrefetch property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithOrderedPrefetchSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WithUnorderedPrefetch")]
        public bool WithUnorderedPrefetch { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WithUnorderedPrefetch-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithUnorderedPrefetch property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithUnorderedPrefetchSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("DMLRequestSort")]
        public bool DMLRequestSort { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DMLRequestSort-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DMLRequestSort property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DMLRequestSortSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SetPredicateElementType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPredicateElementType : ScalarExpressionType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("SetPredicateType")]
        public SetPredicateType SetPredicateType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SetPredicateType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SetPredicateType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SetPredicateTypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SetPredicateType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum SetPredicateType
    {
        
        Update,
        
        Insert,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WindowType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WindowType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WindowAggregateType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WindowAggregateType : RelOpBaseType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType RelOp { get; set; }
    }
    
    /// <summary>
    /// <para>These are the logical operators to which "query"
    ///                         portions of T-SQL statement are translated. Subsequent
    ///                         to that translation, a physical operator is chosen for
    ///                         evaluating each logical operator. The SQL Server query
    ///                         optimizer uses a cost-based approach to decide which 
    ///                         physical operator will implement a logical operator.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"These are the logical operators to which ""query"" portions of T-SQL statement are translated. Subsequent to that translation, a physical operator is chosen for evaluating each logical operator. The SQL Server query optimizer uses a cost-based approach to decide which physical operator will implement a logical operator.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LogicalOpType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum LogicalOpType
    {
        
        Aggregate,
        
        [System.Xml.Serialization.XmlEnumAttribute("Anti Diff")]
        Anti_Diff,
        
        Assert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Async Concat")]
        Async_Concat,
        
        [System.Xml.Serialization.XmlEnumAttribute("Batch Hash Table Build")]
        Batch_Hash_Table_Build,
        
        [System.Xml.Serialization.XmlEnumAttribute("Bitmap Create")]
        Bitmap_Create,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Scan")]
        Clustered_Index_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Seek")]
        Clustered_Index_Seek,
        
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Update")]
        Clustered_Update,
        
        Collapse,
        
        [System.Xml.Serialization.XmlEnumAttribute("Compute Scalar")]
        Compute_Scalar,
        
        Concatenation,
        
        [System.Xml.Serialization.XmlEnumAttribute("Constant Scan")]
        Constant_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Cross Join")]
        Cross_Join,
        
        Delete,
        
        [System.Xml.Serialization.XmlEnumAttribute("Deleted Scan")]
        Deleted_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Distinct Sort")]
        Distinct_Sort,
        
        Distinct,
        
        [System.Xml.Serialization.XmlEnumAttribute("Distribute Streams")]
        Distribute_Streams,
        
        [System.Xml.Serialization.XmlEnumAttribute("Eager Spool")]
        Eager_Spool,
        
        Filter,
        
        [System.Xml.Serialization.XmlEnumAttribute("Flow Distinct")]
        Flow_Distinct,
        
        [System.Xml.Serialization.XmlEnumAttribute("Foreign Key References Check")]
        Foreign_Key_References_Check,
        
        [System.Xml.Serialization.XmlEnumAttribute("Full Outer Join")]
        Full_Outer_Join,
        
        [System.Xml.Serialization.XmlEnumAttribute("Gather Streams")]
        Gather_Streams,
        
        Generic,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Scan")]
        Index_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Index Seek")]
        Index_Seek,
        
        [System.Xml.Serialization.XmlEnumAttribute("Inner Join")]
        Inner_Join,
        
        Insert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Inserted Scan")]
        Inserted_Scan,
        
        Intersect,
        
        [System.Xml.Serialization.XmlEnumAttribute("Intersect All")]
        Intersect_All,
        
        [System.Xml.Serialization.XmlEnumAttribute("Lazy Spool")]
        Lazy_Spool,
        
        [System.Xml.Serialization.XmlEnumAttribute("Left Anti Semi Join")]
        Left_Anti_Semi_Join,
        
        [System.Xml.Serialization.XmlEnumAttribute("Left Diff")]
        Left_Diff,
        
        [System.Xml.Serialization.XmlEnumAttribute("Left Diff All")]
        Left_Diff_All,
        
        [System.Xml.Serialization.XmlEnumAttribute("Left Outer Join")]
        Left_Outer_Join,
        
        [System.Xml.Serialization.XmlEnumAttribute("Left Semi Join")]
        Left_Semi_Join,
        
        [System.Xml.Serialization.XmlEnumAttribute("Log Row Scan")]
        Log_Row_Scan,
        
        Merge,
        
        [System.Xml.Serialization.XmlEnumAttribute("Merge Interval")]
        Merge_Interval,
        
        [System.Xml.Serialization.XmlEnumAttribute("Merge Stats")]
        Merge_Stats,
        
        [System.Xml.Serialization.XmlEnumAttribute("Parameter Table Scan")]
        Parameter_Table_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Partial Aggregate")]
        Partial_Aggregate,
        
        Print,
        
        Put,
        
        Rank,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Delete")]
        Remote_Delete,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Index Scan")]
        Remote_Index_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Index Seek")]
        Remote_Index_Seek,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Insert")]
        Remote_Insert,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Query")]
        Remote_Query,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Scan")]
        Remote_Scan,
        
        [System.Xml.Serialization.XmlEnumAttribute("Remote Update")]
        Remote_Update,
        
        [System.Xml.Serialization.XmlEnumAttribute("Repartition Streams")]
        Repartition_Streams,
        
        [System.Xml.Serialization.XmlEnumAttribute("RID Lookup")]
        RID_Lookup,
        
        [System.Xml.Serialization.XmlEnumAttribute("Right Anti Semi Join")]
        Right_Anti_Semi_Join,
        
        [System.Xml.Serialization.XmlEnumAttribute("Right Diff")]
        Right_Diff,
        
        [System.Xml.Serialization.XmlEnumAttribute("Right Diff All")]
        Right_Diff_All,
        
        [System.Xml.Serialization.XmlEnumAttribute("Right Outer Join")]
        Right_Outer_Join,
        
        [System.Xml.Serialization.XmlEnumAttribute("Right Semi Join")]
        Right_Semi_Join,
        
        Segment,
        
        Sequence,
        
        Sort,
        
        Split,
        
        Switch,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table-valued function")]
        Table_Valued_Function,
        
        [System.Xml.Serialization.XmlEnumAttribute("Table Scan")]
        Table_Scan,
        
        Top,
        
        [System.Xml.Serialization.XmlEnumAttribute("TopN Sort")]
        TopN_Sort,
        
        UDX,
        
        Union,
        
        Update,
        
        [System.Xml.Serialization.XmlEnumAttribute("Local Stats")]
        Local_Stats,
        
        [System.Xml.Serialization.XmlEnumAttribute("Window Spool")]
        Window_Spool,
        
        [System.Xml.Serialization.XmlEnumAttribute("Window Aggregate")]
        Window_Aggregate,
        
        [System.Xml.Serialization.XmlEnumAttribute("Key Lookup")]
        Key_Lookup,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SubqueryOperationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum SubqueryOperationType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("EQ ALL")]
        EQ_ALL,
        
        [System.Xml.Serialization.XmlEnumAttribute("EQ ANY")]
        EQ_ANY,
        
        EXISTS,
        
        [System.Xml.Serialization.XmlEnumAttribute("GE ALL")]
        GE_ALL,
        
        [System.Xml.Serialization.XmlEnumAttribute("GE ANY")]
        GE_ANY,
        
        [System.Xml.Serialization.XmlEnumAttribute("GT ALL")]
        GT_ALL,
        
        [System.Xml.Serialization.XmlEnumAttribute("GT ANY")]
        GT_ANY,
        
        IN,
        
        [System.Xml.Serialization.XmlEnumAttribute("LE ALL")]
        LE_ALL,
        
        [System.Xml.Serialization.XmlEnumAttribute("LE ANY")]
        LE_ANY,
        
        [System.Xml.Serialization.XmlEnumAttribute("LT ALL")]
        LT_ALL,
        
        [System.Xml.Serialization.XmlEnumAttribute("LT ANY")]
        LT_ANY,
        
        [System.Xml.Serialization.XmlEnumAttribute("NE ALL")]
        NE_ALL,
        
        [System.Xml.Serialization.XmlEnumAttribute("NE ANY")]
        NE_ANY,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UDTMethodType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UDTMethodType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("CLRFunction")]
        public CLRFunctionType CLRFunction { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScalarOperator-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ScalarOperator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScalarOperatorSpecified
        {
            get
            {
                return (this.ScalarOperator.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UDTMethodType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UDTMethodType" /> class.</para>
        /// </summary>
        public UDTMethodType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CLRFunctionType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CLRFunctionType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("Assembly")]
        public string Assembly { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Class")]
        public string Class { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Method")]
        public string Method { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UDAggregateType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UDAggregateType
    {
        
        [System.Xml.Serialization.XmlElementAttribute("UDAggObject")]
        public ObjectType UDAggObject { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScalarOperator-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ScalarOperator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScalarOperatorSpecified
        {
            get
            {
                return (this.ScalarOperator.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UDAggregateType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UDAggregateType" /> class.</para>
        /// </summary>
        public UDAggregateType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Distinct")]
        public bool Distinct { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UDFType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UDFType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ScalarType> _scalarOperator;
        
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public System.Collections.ObjectModel.Collection<ScalarType> ScalarOperator
        {
            get
            {
                return this._scalarOperator;
            }
            private set
            {
                this._scalarOperator = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScalarOperator-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ScalarOperator collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScalarOperatorSpecified
        {
            get
            {
                return (this.ScalarOperator.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="UDFType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="UDFType" /> class.</para>
        /// </summary>
        public UDFType()
        {
            this._scalarOperator = new System.Collections.ObjectModel.Collection<ScalarType>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("CLRFunction")]
        public CLRFunctionType CLRFunction { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("FunctionName")]
        public string FunctionName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("IsClrFunction")]
        public bool IsClrFunction { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsClrFunction-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsClrFunction property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsClrFunctionSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Spill warning information</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Spill warning information")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SpillToTempDbType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpillToTempDbType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("SpillLevel")]
        public ulong SpillLevel { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SpillLevel-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpillLevel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpillLevelSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("SpilledThreadCount")]
        public ulong SpilledThreadCount { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SpilledThreadCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SpilledThreadCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpilledThreadCountSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Query wait information</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Query wait information")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WaitWarningType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WaitWarningType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("WaitType")]
        public WaitWarningTypeWaitType WaitType { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WaitTime")]
        public ulong WaitTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WaitTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WaitTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaitTimeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WaitWarningTypeWaitType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum WaitWarningTypeWaitType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("Memory Grant")]
        Memory_Grant,
    }
    
    /// <summary>
    /// <para>Warning information for plan-affecting type conversion</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Warning information for plan-affecting type conversion")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AffectingConvertWarningType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AffectingConvertWarningType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ConvertIssue")]
        public AffectingConvertWarningTypeConvertIssue ConvertIssue { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Expression")]
        public string Expression { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AffectingConvertWarningTypeConvertIssue", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum AffectingConvertWarningTypeConvertIssue
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("Cardinality Estimate")]
        Cardinality_Estimate,
        
        [System.Xml.Serialization.XmlEnumAttribute("Seek Plan")]
        Seek_Plan,
    }
    
    /// <summary>
    /// <para>Sort spill details</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Sort spill details")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SortSpillDetailsType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SortSpillDetailsType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("GrantedMemoryKb")]
        public ulong GrantedMemoryKb { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GrantedMemoryKb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrantedMemoryKb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrantedMemoryKbSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("UsedMemoryKb")]
        public ulong UsedMemoryKb { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsedMemoryKb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsedMemoryKb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsedMemoryKbSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WritesToTempDb")]
        public ulong WritesToTempDb { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WritesToTempDb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WritesToTempDb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WritesToTempDbSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ReadsFromTempDb")]
        public ulong ReadsFromTempDb { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReadsFromTempDb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReadsFromTempDb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReadsFromTempDbSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Hash spill details</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Hash spill details")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HashSpillDetailsType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HashSpillDetailsType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("GrantedMemoryKb")]
        public ulong GrantedMemoryKb { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GrantedMemoryKb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrantedMemoryKb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrantedMemoryKbSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("UsedMemoryKb")]
        public ulong UsedMemoryKb { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsedMemoryKb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsedMemoryKb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsedMemoryKbSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("WritesToTempDb")]
        public ulong WritesToTempDb { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WritesToTempDb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WritesToTempDb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WritesToTempDbSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ReadsFromTempDb")]
        public ulong ReadsFromTempDb { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReadsFromTempDb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReadsFromTempDb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReadsFromTempDbSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Provide warning information for memory grant.
    ///				GrantWarningKind: Warning kind
    ///				RequestedMemory: Initial grant request in KB
    ///				GrantedMemory: Granted memory in KB
    ///				MaxUsedMemory: Maximum used memory grant in KB</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Provide warning information for memory grant. GrantWarningKind: Warning kind Requ" +
        "estedMemory: Initial grant request in KB GrantedMemory: Granted memory in KB Max" +
        "UsedMemory: Maximum used memory grant in KB")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MemoryGrantWarningInfo", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemoryGrantWarningInfo
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("GrantWarningKind")]
        public MemoryGrantWarningType GrantWarningKind { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("RequestedMemory")]
        public ulong RequestedMemory { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("GrantedMemory")]
        public ulong GrantedMemory { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("MaxUsedMemory")]
        public ulong MaxUsedMemory { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MemoryGrantWarningType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum MemoryGrantWarningType
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("Excessive Grant")]
        Excessive_Grant,
        
        [System.Xml.Serialization.XmlEnumAttribute("Used More Than Granted")]
        Used_More_Than_Granted,
        
        [System.Xml.Serialization.XmlEnumAttribute("Grant Increase")]
        Grant_Increase,
    }
    
    /// <summary>
    /// <para>Provide memory grant estimate as well as actual runtime memory grant information.
    ///				Serial required/desired memory attributes are estimated during query compile time for serial execution.
    ///				The rest of attributes provide estimates and counters for query execution time considering actual degree of parallelism.
    ///				SerialRequiredMemory: Required memory in KB if the query runs in serial mode. The query will not start without this memory.
    ///				SerialDesiredMemory: Memory estimated to fit intermediate results in KB if the query runs in serial mode.
    ///				RequiredMemory: Required memory in KB for the chosen degree of parallelism. If the query runs in serial mode, this is the same as SerialRequiredMemory.
    ///				DesiredMemory: Memory estimated to fit intermediate results in KB for the chosen degree of parallelism.  If the query runs in serial mode, this is the same as SerialDesiredMemory.
    ///				RequestedMemory: Memory in KB which the query requests the memory manager to grant. This can be smaller than sum of RequiredMemory and DesiredMemory if it exceeds the maximum allowed for single query.
    ///				GrantWaitTime: Time in seconds if the query has to wait for successful memory grant.
    ///				MaxUsedMemory: Maximum memory in KB used by the query.
    ///				MaxQueryMemory: Maximum memory in KB allowed for single query.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"Provide memory grant estimate as well as actual runtime memory grant information. Serial required/desired memory attributes are estimated during query compile time for serial execution. The rest of attributes provide estimates and counters for query execution time considering actual degree of parallelism. SerialRequiredMemory: Required memory in KB if the query runs in serial mode. The query will not start without this memory. SerialDesiredMemory: Memory estimated to fit intermediate results in KB if the query runs in serial mode. RequiredMemory: Required memory in KB for the chosen degree of parallelism. If the query runs in serial mode, this is the same as SerialRequiredMemory. DesiredMemory: Memory estimated to fit intermediate results in KB for the chosen degree of parallelism. If the query runs in serial mode, this is the same as SerialDesiredMemory. RequestedMemory: Memory in KB which the query requests the memory manager to grant. This can be smaller than sum of RequiredMemory and DesiredMemory if it exceeds the maximum allowed for single query. GrantWaitTime: Time in seconds if the query has to wait for successful memory grant. MaxUsedMemory: Maximum memory in KB used by the query. MaxQueryMemory: Maximum memory in KB allowed for single query.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MemoryGrantType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MemoryGrantType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialRequiredMemory")]
        public ulong SerialRequiredMemory { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("SerialDesiredMemory")]
        public ulong SerialDesiredMemory { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("RequiredMemory")]
        public ulong RequiredMemory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RequiredMemory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RequiredMemory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequiredMemorySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("DesiredMemory")]
        public ulong DesiredMemory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DesiredMemory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DesiredMemory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DesiredMemorySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("RequestedMemory")]
        public ulong RequestedMemory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RequestedMemory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RequestedMemory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequestedMemorySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("GrantWaitTime")]
        public ulong GrantWaitTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GrantWaitTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrantWaitTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrantWaitTimeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("GrantedMemory")]
        public ulong GrantedMemory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GrantedMemory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GrantedMemory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GrantedMemorySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("MaxUsedMemory")]
        public ulong MaxUsedMemory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxUsedMemory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxUsedMemory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxUsedMemorySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("MaxQueryMemory")]
        public ulong MaxQueryMemory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxQueryMemory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxQueryMemory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxQueryMemorySpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Provide hardware-dependent properties that affect cost estimate (and hence, query plan choice), as seen by the Query Optimizer.
    ///        EstimatedAvailableMemoryGrant is an estimate of what amount of memory (KB) will be available for this query at the execution time to request a memory grant from.
    ///        EstimatedPagesCached is an estimate of how many pages of data will remain cached in the buffer pool if the query needs to read it again.
    ///        EstimatedAvailableDegreeOfParallelism is an estimate of number of CPUs that can be used to execute the query should the Query Optimizer pick a parallel plan.
    ///        MaxCompileMemory is the maximum memory in KB allowed for query optimizer to use during compilation.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"Provide hardware-dependent properties that affect cost estimate (and hence, query plan choice), as seen by the Query Optimizer. EstimatedAvailableMemoryGrant is an estimate of what amount of memory (KB) will be available for this query at the execution time to request a memory grant from. EstimatedPagesCached is an estimate of how many pages of data will remain cached in the buffer pool if the query needs to read it again. EstimatedAvailableDegreeOfParallelism is an estimate of number of CPUs that can be used to execute the query should the Query Optimizer pick a parallel plan. MaxCompileMemory is the maximum memory in KB allowed for query optimizer to use during compilation.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OptimizerHardwareDependentPropertiesType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OptimizerHardwareDependentPropertiesType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedAvailableMemoryGrant")]
        public ulong EstimatedAvailableMemoryGrant { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedPagesCached")]
        public ulong EstimatedPagesCached { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("EstimatedAvailableDegreeOfParallelism")]
        public ulong EstimatedAvailableDegreeOfParallelism { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EstimatedAvailableDegreeOfParallelism-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EstimatedAvailableDegreeOfParallelism property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EstimatedAvailableDegreeOfParallelismSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("MaxCompileMemory")]
        public ulong MaxCompileMemory { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxCompileMemory-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MaxCompileMemory property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxCompileMemorySpecified { get; set; }
    }
    
    /// <summary>
    /// <para>List of statistics info used during query optimization</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("List of statistics info used during query optimization")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OptimizerStatsUsageType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OptimizerStatsUsageType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StatsInfoType> _statisticsInfo;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("StatisticsInfo")]
        public System.Collections.ObjectModel.Collection<StatsInfoType> StatisticsInfo
        {
            get
            {
                return this._statisticsInfo;
            }
            private set
            {
                this._statisticsInfo = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OptimizerStatsUsageType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OptimizerStatsUsageType" /> class.</para>
        /// </summary>
        public OptimizerStatsUsageType()
        {
            this._statisticsInfo = new System.Collections.ObjectModel.Collection<StatsInfoType>();
        }
    }
    
    /// <summary>
    /// <para>Information on single statistics used during query optimization.
    ///					Database : name of the database
    ///					Schema : name of the schema
    ///					Table : name of the table
    ///					Statistics : name of the statistics
    ///					ModificationCount : number of modifications since the last update
    ///					SamplingPercent : statistics sampling percentage
    ///					LastUpdate : date when the statistics was updated</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute(@"Information on single statistics used during query optimization. Database : name of the database Schema : name of the schema Table : name of the table Statistics : name of the statistics ModificationCount : number of modifications since the last update SamplingPercent : statistics sampling percentage LastUpdate : date when the statistics was updated")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StatsInfoType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatsInfoType
    {
        
        [System.Xml.Serialization.XmlAttributeAttribute("Database")]
        public string Database { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Schema")]
        public string Schema { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("Table")]
        public string Table { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Statistics")]
        public string Statistics { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ModificationCount")]
        public ulong ModificationCount { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("SamplingPercent")]
        public double SamplingPercent { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("LastUpdate", DataType="dateTime")]
        public System.DateTime LastUpdate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastUpdate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastUpdate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastUpdateSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Collection of trace flags used in SQL engine.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Collection of trace flags used in SQL engine.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TraceFlagListType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TraceFlagListType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TraceFlagType> _traceFlag;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("TraceFlag")]
        public System.Collections.ObjectModel.Collection<TraceFlagType> TraceFlag
        {
            get
            {
                return this._traceFlag;
            }
            private set
            {
                this._traceFlag = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TraceFlagListType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TraceFlagListType" /> class.</para>
        /// </summary>
        public TraceFlagListType()
        {
            this._traceFlag = new System.Collections.ObjectModel.Collection<TraceFlagType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("IsCompileTime")]
        public bool IsCompileTime { get; set; }
    }
    
    /// <summary>
    /// <para>Describe a trace flag used in SQL engine.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Describe a trace flag used in SQL engine.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TraceFlagType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TraceFlagType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Value")]
        public ulong Value { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Scope")]
        public TraceFlagScopeType Scope { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TraceFlagScopeType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum TraceFlagScopeType
    {
        
        Global,
        
        Session,
    }
    
    /// <summary>
    /// <para>A list of query wait statistics.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("A list of query wait statistics.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WaitStatListType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WaitStatListType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<WaitStatType> _wait;
        
        [System.Xml.Serialization.XmlElementAttribute("Wait")]
        public System.Collections.ObjectModel.Collection<WaitStatType> Wait
        {
            get
            {
                return this._wait;
            }
            private set
            {
                this._wait = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Wait-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Wait collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WaitSpecified
        {
            get
            {
                return (this.Wait.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="WaitStatListType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="WaitStatListType" /> class.</para>
        /// </summary>
        public WaitStatListType()
        {
            this._wait = new System.Collections.ObjectModel.Collection<WaitStatType>();
        }
    }
    
    /// <summary>
    /// <para>Wait statistics during one query execution.
    ///					WaitType: Name of the wait
    ///					WaitTimeMs: Wait time in milliseconds
    ///					WaitCount: Number of waits</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Wait statistics during one query execution. WaitType: Name of the wait WaitTimeMs" +
        ": Wait time in milliseconds WaitCount: Number of waits")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WaitStatType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WaitStatType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("WaitType")]
        public string WaitType { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("WaitTimeMs")]
        public ulong WaitTimeMs { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("WaitCount")]
        public ulong WaitCount { get; set; }
    }
    
    /// <summary>
    /// <para>Shows time statistics for single query execution.
    ///				CpuTime: CPU time in milliseconds
    ///				ElapsedTime: elapsed time in milliseconds</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Shows time statistics for single query execution. CpuTime: CPU time in millisecon" +
        "ds ElapsedTime: elapsed time in milliseconds")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("QueryExecTimeType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryExecTimeType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("CpuTime")]
        public ulong CpuTime { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("ElapsedTime")]
        public ulong ElapsedTime { get; set; }
    }
    
    /// <summary>
    /// <para>Shows the plan for the UDF or stored procedure</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Shows the plan for the UDF or stored procedure")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FunctionType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FunctionType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Statements")]
        public StmtBlockType Statements { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ProcName")]
        public string ProcName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("IsNativelyCompiled")]
        public bool IsNativelyCompiled { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsNativelyCompiled-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsNativelyCompiled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNativelyCompiledSpecified { get; set; }
    }
    
    /// <summary>
    /// <para>Complex statement type that is constructed by a condition, a then clause and an optional else clause.</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Complex statement type that is constructed by a condition, a then clause and an o" +
        "ptional else clause.")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtCondType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtCondType : BaseStmtInfoType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Condition")]
        public StmtCondTypeCondition Condition { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Then")]
        public StmtCondTypeThen Then { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Else")]
        public StmtCondTypeElse Else { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtCondTypeCondition", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtCondTypeCondition
    {
        
        [System.Xml.Serialization.XmlElementAttribute("QueryPlan")]
        public QueryPlanType QueryPlan { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FunctionType> _uDF;
        
        [System.Xml.Serialization.XmlElementAttribute("UDF")]
        public System.Collections.ObjectModel.Collection<FunctionType> UDF
        {
            get
            {
                return this._uDF;
            }
            private set
            {
                this._uDF = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UDF-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UDF collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UDFSpecified
        {
            get
            {
                return (this.UDF.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="StmtCondTypeCondition" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StmtCondTypeCondition" /> class.</para>
        /// </summary>
        public StmtCondTypeCondition()
        {
            this._uDF = new System.Collections.ObjectModel.Collection<FunctionType>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtCondTypeThen", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtCondTypeThen
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Statements")]
        public StmtBlockType Statements { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtCondTypeElse", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtCondTypeElse
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Statements")]
        public StmtBlockType Statements { get; set; }
    }
    
    /// <summary>
    /// <para>The cursor type that might have one or more cursor operations, used in DECLARE CURSOR, OPEN CURSOR and FETCH CURSOR</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("The cursor type that might have one or more cursor operations, used in DECLARE CU" +
        "RSOR, OPEN CURSOR and FETCH CURSOR")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtCursorType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtCursorType : BaseStmtInfoType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("CursorPlan")]
        public CursorPlanType CursorPlan { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CursorPlanType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CursorPlanType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<CursorPlanTypeOperation> _operation;
        
        /// <summary>
        /// <para>The number of occure time depends on how we define the cursor 
        ///	schema. In shiloh, the OPEN CURSOR and FETCH CURSOR doesn't show any plan and won't raise
        ///	error if the cursor doesn't exist. So we must keep the same behaivor, so the minOccurs is 0. If we allow
        ///	the declare cursor to be executed in showplan mode, then the open cursor and declare cursor will have
        ///	plan in showplan mode, the minOccurs will be 1</para>
        /// </summary>
        [System.ComponentModel.DescriptionAttribute(@"The number of occure time depends on how we define the cursor schema. In shiloh, the OPEN CURSOR and FETCH CURSOR doesn't show any plan and won't raise error if the cursor doesn't exist. So we must keep the same behaivor, so the minOccurs is 0. If we allow the declare cursor to be executed in showplan mode, then the open cursor and declare cursor will have plan in showplan mode, the minOccurs will be 1")]
        [System.Xml.Serialization.XmlElementAttribute("Operation")]
        public System.Collections.ObjectModel.Collection<CursorPlanTypeOperation> Operation
        {
            get
            {
                return this._operation;
            }
            private set
            {
                this._operation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Operation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationSpecified
        {
            get
            {
                return (this.Operation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="CursorPlanType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CursorPlanType" /> class.</para>
        /// </summary>
        public CursorPlanType()
        {
            this._operation = new System.Collections.ObjectModel.Collection<CursorPlanTypeOperation>();
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CursorName")]
        public string CursorName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CursorActualType")]
        public CursorType CursorActualType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CursorActualType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CursorActualType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CursorActualTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CursorRequestedType")]
        public CursorType CursorRequestedType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CursorRequestedType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CursorRequestedType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CursorRequestedTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("CursorConcurrency")]
        public CursorPlanTypeCursorConcurrency CursorConcurrency { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CursorConcurrency-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CursorConcurrency property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CursorConcurrencySpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ForwardOnly")]
        public bool ForwardOnly { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ForwardOnly-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ForwardOnly property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForwardOnlySpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CursorPlanTypeOperation", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CursorPlanTypeOperation
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("QueryPlan")]
        public QueryPlanType QueryPlan { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FunctionType> _uDF;
        
        [System.Xml.Serialization.XmlElementAttribute("UDF")]
        public System.Collections.ObjectModel.Collection<FunctionType> UDF
        {
            get
            {
                return this._uDF;
            }
            private set
            {
                this._uDF = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UDF-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the UDF collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UDFSpecified
        {
            get
            {
                return (this.UDF.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="CursorPlanTypeOperation" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CursorPlanTypeOperation" /> class.</para>
        /// </summary>
        public CursorPlanTypeOperation()
        {
            this._uDF = new System.Collections.ObjectModel.Collection<FunctionType>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("OperationType")]
        public CursorPlanTypeOperationOperationType OperationType { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CursorPlanTypeOperationOperationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum CursorPlanTypeOperationOperationType
    {
        
        FetchQuery,
        
        PopulateQuery,
        
        RefreshQuery,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CursorType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CursorType
    {
        
        Dynamic,
        
        FastForward,
        
        Keyset,
        
        SnapShot,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CursorPlanTypeCursorConcurrency", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum CursorPlanTypeCursorConcurrency
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("Read Only")]
        Read_Only,
        
        Pessimistic,
        
        Optimistic,
    }
    
    /// <summary>
    /// <para>The cursor type that might have one or more cursor operations, used in DECLARE CURSOR, OPEN CURSOR and FETCH CURSOR</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("The cursor type that might have one or more cursor operations, used in DECLARE CU" +
        "RSOR, OPEN CURSOR and FETCH CURSOR")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtReceiveType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtReceiveType : BaseStmtInfoType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ReceivePlanTypeOperation> _receivePlan;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("ReceivePlan")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Operation", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ReceivePlanTypeOperation> ReceivePlan
        {
            get
            {
                return this._receivePlan;
            }
            private set
            {
                this._receivePlan = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="StmtReceiveType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StmtReceiveType" /> class.</para>
        /// </summary>
        public StmtReceiveType()
        {
            this._receivePlan = new System.Collections.ObjectModel.Collection<ReceivePlanTypeOperation>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReceivePlanType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceivePlanType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ReceivePlanTypeOperation> _operation;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Operation")]
        public System.Collections.ObjectModel.Collection<ReceivePlanTypeOperation> Operation
        {
            get
            {
                return this._operation;
            }
            private set
            {
                this._operation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ReceivePlanType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ReceivePlanType" /> class.</para>
        /// </summary>
        public ReceivePlanType()
        {
            this._operation = new System.Collections.ObjectModel.Collection<ReceivePlanTypeOperation>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReceivePlanTypeOperation", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceivePlanTypeOperation
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("QueryPlan")]
        public QueryPlanType QueryPlan { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("OperationType")]
        public ReceivePlanTypeOperationOperationType OperationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperationType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OperationType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationTypeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReceivePlanTypeOperationOperationType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    public enum ReceivePlanTypeOperationOperationType
    {
        
        ReceivePlanSelect,
        
        ReceivePlanUpdate,
    }
    
    /// <summary>
    /// <para>Use database statement</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("Use database statement")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StmtUseDbType", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StmtUseDbType : BaseStmtInfoType
    {
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Database")]
        public string Database { get; set; }
    }
    
    /// <summary>
    /// <para>This is the root element</para>
    /// </summary>
    [System.ComponentModel.DescriptionAttribute("This is the root element")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShowPlanXML", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ShowPlanXML", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ShowPlanXML
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ShowPlanXMLBatchSequenceBatch> _batchSequence;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlArrayAttribute("BatchSequence")]
        [System.Xml.Serialization.XmlArrayItemAttribute("Batch", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
        public System.Collections.ObjectModel.Collection<ShowPlanXMLBatchSequenceBatch> BatchSequence
        {
            get
            {
                return this._batchSequence;
            }
            private set
            {
                this._batchSequence = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ShowPlanXML" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ShowPlanXML" /> class.</para>
        /// </summary>
        public ShowPlanXML()
        {
            this._batchSequence = new System.Collections.ObjectModel.Collection<ShowPlanXMLBatchSequenceBatch>();
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Version")]
        public string Version { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("Build")]
        public string Build { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("ClusteredMode")]
        public bool ClusteredMode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ClusteredMode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ClusteredMode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClusteredModeSpecified { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShowPlanXMLBatchSequence", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowPlanXMLBatchSequence
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ShowPlanXMLBatchSequenceBatch> _batch;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Batch")]
        public System.Collections.ObjectModel.Collection<ShowPlanXMLBatchSequenceBatch> Batch
        {
            get
            {
                return this._batch;
            }
            private set
            {
                this._batch = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ShowPlanXMLBatchSequence" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ShowPlanXMLBatchSequence" /> class.</para>
        /// </summary>
        public ShowPlanXMLBatchSequence()
        {
            this._batch = new System.Collections.ObjectModel.Collection<ShowPlanXMLBatchSequenceBatch>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.444.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShowPlanXMLBatchSequenceBatch", Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowPlanXMLBatchSequenceBatch
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StmtBlockType> _statements;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("Statements")]
        public System.Collections.ObjectModel.Collection<StmtBlockType> Statements
        {
            get
            {
                return this._statements;
            }
            private set
            {
                this._statements = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ShowPlanXMLBatchSequenceBatch" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ShowPlanXMLBatchSequenceBatch" /> class.</para>
        /// </summary>
        public ShowPlanXMLBatchSequenceBatch()
        {
            this._statements = new System.Collections.ObjectModel.Collection<StmtBlockType>();
        }
    }
}
